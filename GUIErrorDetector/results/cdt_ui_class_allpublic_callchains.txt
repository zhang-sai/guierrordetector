----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/ui/viewmodel/datamodel/AbstractDMVMAdapter$2, run()V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/WorkingDirectoryBlock$1, getName(Lorg/eclipse/swt/accessibility/AccessibleEvent;)V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/launch/AbstractLaunchVMProvider$6, run()V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/actions/DsfStepReturnCommand$2, doExecute()V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/presentation/CSourcePresentationCreator$1, sourceTagsChanged(Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/presentation/ISourceTagProvider;)V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyPart$17$2, run()V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$2, getText(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
   start: Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
      Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

--- found anomaly call chain ----, num: 0
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$2, getText(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/LabelProvider, getText(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Label, setText(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

      Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

--- found anomaly call chain ----, num: 1
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$2, getText(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/LabelProvider, getText(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/Dialog, shortenText(Ljava/lang/String;Lorg/eclipse/swt/widgets/Control;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, internal_new_GC(Lorg/eclipse/swt/graphics/GCData;)J > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, getSystemFont()Lorg/eclipse/swt/graphics/Font; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$4, getText(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
   start: Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
      Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

--- found anomaly call chain ----, num: 2
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$4, getText(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/LabelProvider, getText(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Label, setText(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

      Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

--- found anomaly call chain ----, num: 3
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$4, getText(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/LabelProvider, getText(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/Dialog, shortenText(Ljava/lang/String;Lorg/eclipse/swt/widgets/Control;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, internal_new_GC(Lorg/eclipse/swt/graphics/GCData;)J > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, getSystemFont()Lorg/eclipse/swt/graphics/Font; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/register/RegisterBitFieldVMNode$14, run()V > Context: Everywhere
   start: Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
      Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

--- found anomaly call chain ----, num: 4
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/register/RegisterBitFieldVMNode$14, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/register/RegisterBitFieldVMNode$14$1, <init>(Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/register/RegisterBitFieldVMNode$14;Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;Lorg/eclipse/debug/internal/ui/viewers/model/provisional/IElementCompareRequest;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/DataRequestMonitor, <init>(Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor, <init>(Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/DsfExecutable, <init>()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Thread, getStackTrace()[Ljava/lang/StackTraceElement; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/SecurityManager, checkPermission(Ljava/security/Permission;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/security/AccessController, checkPermission(Ljava/security/Permission;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Label, setText(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

      Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

--- found anomaly call chain ----, num: 5
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/register/RegisterBitFieldVMNode$14, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/register/RegisterBitFieldVMNode$14$1, <init>(Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/register/RegisterBitFieldVMNode$14;Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;Lorg/eclipse/debug/internal/ui/viewers/model/provisional/IElementCompareRequest;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/DataRequestMonitor, <init>(Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor, <init>(Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/DsfExecutable, <init>()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Thread, getStackTrace()[Ljava/lang/StackTraceElement; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/SecurityManager, checkPermission(Ljava/security/Permission;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/security/AccessController, checkPermission(Ljava/security/Permission;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/Dialog, shortenText(Ljava/lang/String;Lorg/eclipse/swt/widgets/Control;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, internal_new_GC(Lorg/eclipse/swt/graphics/GCData;)J > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, getSystemFont()Lorg/eclipse/swt/graphics/Font; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/preferences/IntegerWithBooleanFieldEditor$1, widgetSelected(Lorg/eclipse/swt/events/SelectionEvent;)V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyPart$26, run()V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyPart$ActionToggleBreakpoint, <init>(Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyPart;)V > Context: Everywhere
   start: Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
      Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

--- found anomaly call chain ----, num: 6
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyPart$ActionToggleBreakpoint, <init>(Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyPart;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyImageRegistry, getImageDescriptor(Ljava/lang/String;)Lorg/eclipse/jface/resource/ImageDescriptor; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/AbstractImageRegistry, getDescriptor(Ljava/lang/String;)Lorg/eclipse/jface/resource/ImageDescriptor; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/AbstractImageRegistry, createFileImageDescriptor(Ljava/lang/String;)Lorg/eclipse/jface/resource/ImageDescriptor; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/URLImageDescriptor, getImageData()Lorg/eclipse/swt/graphics/ImageData; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Throwable, getLocalizedMessage()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/SWTException, getMessage()Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Label, setText(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

      Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

--- found anomaly call chain ----, num: 7
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyPart$ActionToggleBreakpoint, <init>(Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyPart;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyImageRegistry, getImageDescriptor(Ljava/lang/String;)Lorg/eclipse/jface/resource/ImageDescriptor; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/AbstractImageRegistry, getDescriptor(Ljava/lang/String;)Lorg/eclipse/jface/resource/ImageDescriptor; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/AbstractImageRegistry, createFileImageDescriptor(Ljava/lang/String;)Lorg/eclipse/jface/resource/ImageDescriptor; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/URLImageDescriptor, getImageData()Lorg/eclipse/swt/graphics/ImageData; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Throwable, getLocalizedMessage()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/SWTException, getMessage()Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/Dialog, shortenText(Ljava/lang/String;Lorg/eclipse/swt/widgets/Control;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, internal_new_GC(Lorg/eclipse/swt/graphics/GCData;)J > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, getSystemFont()Lorg/eclipse/swt/graphics/Font; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyPart$ActionToggleBreakpoint, run()V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyPart$ActionToggleBreakpoint, update()V > Context: Everywhere
   start: Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
      Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

--- found anomaly call chain ----, num: 8
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyPart$ActionToggleBreakpoint, update()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/action/Action, setText(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/action/LegacyActionTools, convertLocalizedAccelerator(Ljava/lang/String;)I > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/action/LegacyActionTools, findLocalizedModifier(Ljava/lang/String;)I > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, toUpperCase()Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/util/Locale, getDefault()Ljava/util/Locale; > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/security/AccessController, doPrivileged(Ljava/security/PrivilegedAction;)Ljava/lang/Object; > Context: Everywhere
 -> Node: < Primordial, Ljava/security/AccessControlContext$2, run()Ljava/lang/Object; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Label, setText(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

      Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

--- found anomaly call chain ----, num: 9
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyPart$ActionToggleBreakpoint, update()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/action/Action, setText(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/action/LegacyActionTools, convertLocalizedAccelerator(Ljava/lang/String;)I > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/action/LegacyActionTools, findLocalizedModifier(Ljava/lang/String;)I > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, toUpperCase()Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/util/Locale, getDefault()Ljava/util/Locale; > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/security/AccessController, doPrivileged(Ljava/security/PrivilegedAction;)Ljava/lang/Object; > Context: Everywhere
 -> Node: < Primordial, Ljava/security/AccessControlContext$2, run()Ljava/lang/Object; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/Dialog, shortenText(Ljava/lang/String;Lorg/eclipse/swt/widgets/Control;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, internal_new_GC(Lorg/eclipse/swt/graphics/GCData;)J > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, getSystemFont()Lorg/eclipse/swt/graphics/Font; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/CMainTab$5, widgetSelected(Lorg/eclipse/swt/events/SelectionEvent;)V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/register/RegisterVMNode$2, isEnabled(Lorg/eclipse/core/runtime/IStatus;Ljava/util/Map;)Z > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/expression/ExpressionVMProvider$2, propertyChange(Lorg/eclipse/jface/util/PropertyChangeEvent;)V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/sourcelookup/InstructionPointerManager$AnnotationWrapper, equals(Ljava/lang/Object;)Z > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/sourcelookup/InstructionPointerManager$AnnotationWrapper, hashCode()I > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/GdbRunToLineAdapterFactory$GdbSuspendResume, getAdapter(Ljava/lang/Class;)Ljava/lang/Object; > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/GdbRunToLineAdapterFactory$GdbSuspendResume, canResume()Z > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/GdbRunToLineAdapterFactory$GdbSuspendResume, canSuspend()Z > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/GdbRunToLineAdapterFactory$GdbSuspendResume, isSuspended()Z > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/GdbRunToLineAdapterFactory$GdbSuspendResume, resume()V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/GdbRunToLineAdapterFactory$GdbSuspendResume, suspend()V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/viewmodel/actions/UpdatePoliciesContribution$1, fill(Lorg/eclipse/swt/widgets/Menu;I)V > Context: Everywhere
   start: Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
      Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

--- found anomaly call chain ----, num: 10
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/viewmodel/actions/UpdatePoliciesContribution$1, fill(Lorg/eclipse/swt/widgets/Menu;I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/MenuItem, setEnabled(Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, error(I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/SWT, error(I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/SWT, error(ILjava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/SWT, error(ILjava/lang/Throwable;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Label, setText(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

      Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

--- found anomaly call chain ----, num: 11
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/viewmodel/actions/UpdatePoliciesContribution$1, fill(Lorg/eclipse/swt/widgets/Menu;I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/MenuItem, setEnabled(Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, error(I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/SWT, error(I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/SWT, error(ILjava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/SWT, error(ILjava/lang/Throwable;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/Dialog, shortenText(Ljava/lang/String;Lorg/eclipse/swt/widgets/Control;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, internal_new_GC(Lorg/eclipse/swt/graphics/GCData;)J > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, getSystemFont()Lorg/eclipse/swt/graphics/Font; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/viewmodel/actions/UpdatePoliciesContribution$1, isEnabled()Z > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyPart$12, run()V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/text/REDTextStore$TextStoreSwapper, run(Lorg/eclipse/core/runtime/IProgressMonitor;)Lorg/eclipse/core/runtime/IStatus; > Context: Everywhere
   start: Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
      Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

--- found anomaly call chain ----, num: 12
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/text/REDTextStore$TextStoreSwapper, run(Lorg/eclipse/core/runtime/IProgressMonitor;)Lorg/eclipse/core/runtime/IStatus; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/runtime/jobs/Job, cancel()Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/InternalJob, cancel()Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/JobManager, cancel(Lorg/eclipse/core/internal/jobs/InternalJob;)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/JobManager, changeState(Lorg/eclipse/core/internal/jobs/InternalJob;I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Label, setText(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

      Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

--- found anomaly call chain ----, num: 13
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/text/REDTextStore$TextStoreSwapper, run(Lorg/eclipse/core/runtime/IProgressMonitor;)Lorg/eclipse/core/runtime/IStatus; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/runtime/jobs/Job, cancel()Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/InternalJob, cancel()Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/JobManager, cancel(Lorg/eclipse/core/internal/jobs/InternalJob;)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/JobManager, changeState(Lorg/eclipse/core/internal/jobs/InternalJob;I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/Dialog, shortenText(Ljava/lang/String;Lorg/eclipse/swt/widgets/Control;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, internal_new_GC(Lorg/eclipse/swt/graphics/GCData;)J > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, getSystemFont()Lorg/eclipse/swt/graphics/Font; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/modules/detail/ModuleDetailPane$DetailJob, <init>(Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/modules/detail/ModuleDetailPane;Ljava/lang/Object;)V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/sourcelookup/DsfSourceDisplayAdapter$DisplayJob$1, run()V > Context: Everywhere
   start: Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
      Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

--- found anomaly call chain ----, num: 14
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/sourcelookup/DsfSourceDisplayAdapter$DisplayJob$1, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/sourcelookup/DsfSourceDisplayAdapter, access$10(Lorg/eclipse/cdt/dsf/debug/ui/sourcelookup/DsfSourceDisplayAdapter;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/sourcelookup/DsfSourceDisplayAdapter, serviceDisplayAndClearingJobs()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/runtime/jobs/Job, schedule()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/InternalJob, schedule(J)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/JobManager, schedule(Lorg/eclipse/core/internal/jobs/InternalJob;JZ)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Label, setText(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

      Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

--- found anomaly call chain ----, num: 15
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/sourcelookup/DsfSourceDisplayAdapter$DisplayJob$1, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/sourcelookup/DsfSourceDisplayAdapter, access$10(Lorg/eclipse/cdt/dsf/debug/ui/sourcelookup/DsfSourceDisplayAdapter;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/sourcelookup/DsfSourceDisplayAdapter, serviceDisplayAndClearingJobs()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/runtime/jobs/Job, schedule()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/InternalJob, schedule(J)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/JobManager, schedule(Lorg/eclipse/core/internal/jobs/InternalJob;JZ)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/Dialog, shortenText(Ljava/lang/String;Lorg/eclipse/swt/widgets/Control;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, internal_new_GC(Lorg/eclipse/swt/graphics/GCData;)J > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, getSystemFont()Lorg/eclipse/swt/graphics/Font; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyRulerColumn$3, widgetDisposed(Lorg/eclipse/swt/events/DisposeEvent;)V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyPart$28, run()V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/preferences/DecoratingStringFieldEditor$1, focusGained(Lorg/eclipse/swt/events/FocusEvent;)V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/variable/VariableVMNode$3, isEnabled(Lorg/eclipse/core/runtime/IStatus;Ljava/util/Map;)Z > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/launch/AbstractLaunchVMProvider$3, run()V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/register/RegisterBitFieldVMNode$7, isEnabled(Lorg/eclipse/core/runtime/IStatus;Ljava/util/Map;)Z > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SerialPortSettingsBlock$1, dialogFieldChanged(Lorg/eclipse/cdt/debug/internal/ui/dialogfields/DialogField;)V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/ui/concurrent/DisplayDsfExecutor$3$1, run()V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/register/RegisterBitFieldVMNode$2, isEnabled(Lorg/eclipse/core/runtime/IStatus;Ljava/util/Map;)Z > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/launch/AbstractLaunchVMProvider$4, run()V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/variable/VariableVMProvider$2, propertyChange(Lorg/eclipse/jface/util/PropertyChangeEvent;)V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyPart$ActionRefreshView, <init>(Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyPart;)V > Context: Everywhere
   start: Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
      Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

--- found anomaly call chain ----, num: 16
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyPart$ActionRefreshView, <init>(Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyPart;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyImageRegistry, getImageDescriptor(Ljava/lang/String;)Lorg/eclipse/jface/resource/ImageDescriptor; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/AbstractImageRegistry, getDescriptor(Ljava/lang/String;)Lorg/eclipse/jface/resource/ImageDescriptor; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/AbstractImageRegistry, createFileImageDescriptor(Ljava/lang/String;)Lorg/eclipse/jface/resource/ImageDescriptor; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/URLImageDescriptor, getImageData()Lorg/eclipse/swt/graphics/ImageData; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Throwable, getLocalizedMessage()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/SWTException, getMessage()Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Label, setText(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

      Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

--- found anomaly call chain ----, num: 17
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyPart$ActionRefreshView, <init>(Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyPart;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyImageRegistry, getImageDescriptor(Ljava/lang/String;)Lorg/eclipse/jface/resource/ImageDescriptor; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/AbstractImageRegistry, getDescriptor(Ljava/lang/String;)Lorg/eclipse/jface/resource/ImageDescriptor; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/AbstractImageRegistry, createFileImageDescriptor(Ljava/lang/String;)Lorg/eclipse/jface/resource/ImageDescriptor; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/URLImageDescriptor, getImageData()Lorg/eclipse/swt/graphics/ImageData; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Throwable, getLocalizedMessage()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/SWTException, getMessage()Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/Dialog, shortenText(Ljava/lang/String;Lorg/eclipse/swt/widgets/Control;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, internal_new_GC(Lorg/eclipse/swt/graphics/GCData;)J > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, getSystemFont()Lorg/eclipse/swt/graphics/Font; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyPart$ActionRefreshView, run()V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/SteppingController$3, run()V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyPart$20$2$1, run()V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/CArgumentsTab$2, modifyText(Lorg/eclipse/swt/events/ModifyEvent;)V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/actions/DsfStepOverCommand$1, doExecute()V > Context: Everywhere
   start: Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
      Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

--- found anomaly call chain ----, num: 18
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/actions/DsfStepOverCommand$1, doExecute()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/actions/DsfStepOverCommand$1$1, <init>(Lorg/eclipse/cdt/dsf/debug/ui/actions/DsfStepOverCommand$1;Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;Lorg/eclipse/debug/core/commands/IEnabledStateRequest;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/DataRequestMonitor, <init>(Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor, <init>(Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/DsfExecutable, <init>()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Thread, getStackTrace()[Ljava/lang/StackTraceElement; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/SecurityManager, checkPermission(Ljava/security/Permission;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/security/AccessController, checkPermission(Ljava/security/Permission;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Label, setText(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

      Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

--- found anomaly call chain ----, num: 19
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/actions/DsfStepOverCommand$1, doExecute()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/actions/DsfStepOverCommand$1$1, <init>(Lorg/eclipse/cdt/dsf/debug/ui/actions/DsfStepOverCommand$1;Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;Lorg/eclipse/debug/core/commands/IEnabledStateRequest;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/DataRequestMonitor, <init>(Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor, <init>(Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/DsfExecutable, <init>()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Thread, getStackTrace()[Ljava/lang/StackTraceElement; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/SecurityManager, checkPermission(Ljava/security/Permission;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/security/AccessController, checkPermission(Ljava/security/Permission;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/Dialog, shortenText(Ljava/lang/String;Lorg/eclipse/swt/widgets/Control;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, internal_new_GC(Lorg/eclipse/swt/graphics/GCData;)J > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, getSystemFont()Lorg/eclipse/swt/graphics/Font; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/CArgumentsTab$1, getName(Lorg/eclipse/swt/accessibility/AccessibleEvent;)V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/register/RegisterVMProvider$1, propertyChange(Lorg/eclipse/jface/util/PropertyChangeEvent;)V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyPart$8, menuAboutToShow(Lorg/eclipse/jface/action/IMenuManager;)V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/variable/VariableVMNode$1, isEnabled(Lorg/eclipse/core/runtime/IStatus;Ljava/util/Map;)Z > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/sourcelookup/DsfSourceDisplayAdapter$3, run()V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/variable/VariableVMNode$2, isEnabled(Lorg/eclipse/core/runtime/IStatus;Ljava/util/Map;)Z > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/launch/StackFramesVMNode$16, handleCompleted()V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/memory/SelectUpdatePolicyAction$SelectPolicy, <init>(Lorg/eclipse/cdt/dsf/debug/ui/memory/SelectUpdatePolicyAction;Ljava/lang/String;Ljava/lang/String;)V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/memory/SelectUpdatePolicyAction$SelectPolicy, getText()Ljava/lang/String; > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/memory/SelectUpdatePolicyAction$SelectPolicy, run()V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/actions/DsfSuspendCommand$2, doExecute()V > Context: Everywhere
   start: Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
      Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

--- found anomaly call chain ----, num: 20
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/actions/DsfSuspendCommand$2, doExecute()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor, <init>(Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/DsfExecutable, <init>()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Thread, getStackTrace()[Ljava/lang/StackTraceElement; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/SecurityManager, checkPermission(Ljava/security/Permission;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/security/AccessController, checkPermission(Ljava/security/Permission;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Label, setText(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

      Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

--- found anomaly call chain ----, num: 21
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/actions/DsfSuspendCommand$2, doExecute()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor, <init>(Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/DsfExecutable, <init>()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Thread, getStackTrace()[Ljava/lang/StackTraceElement; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/SecurityManager, checkPermission(Ljava/security/Permission;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/security/AccessController, checkPermission(Ljava/security/Permission;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/Dialog, shortenText(Ljava/lang/String;Lorg/eclipse/swt/widgets/Control;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, internal_new_GC(Lorg/eclipse/swt/graphics/GCData;)J > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, getSystemFont()Lorg/eclipse/swt/graphics/Font; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/ProcessPrompter$1, getText(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
   start: Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
      Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

--- found anomaly call chain ----, num: 22
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/ProcessPrompter$1, getText(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Label, setText(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

      Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

--- found anomaly call chain ----, num: 23
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/ProcessPrompter$1, getText(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/Dialog, shortenText(Ljava/lang/String;Lorg/eclipse/swt/widgets/Control;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, internal_new_GC(Lorg/eclipse/swt/graphics/GCData;)J > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, getSystemFont()Lorg/eclipse/swt/graphics/Font; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/ProcessPrompter$1, getImage(Ljava/lang/Object;)Lorg/eclipse/swt/graphics/Image; > Context: Everywhere
   start: Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
      Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

--- found anomaly call chain ----, num: 24
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/ProcessPrompter$1, getImage(Ljava/lang/Object;)Lorg/eclipse/swt/graphics/Image; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/LaunchImages, get(Ljava/lang/String;)Lorg/eclipse/swt/graphics/Image; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/ImageRegistry, get(Ljava/lang/String;)Lorg/eclipse/swt/graphics/Image; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/ResourceManager, createImageWithDefault(Lorg/eclipse/jface/resource/ImageDescriptor;)Lorg/eclipse/swt/graphics/Image; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, append(Ljava/lang/Object;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Label, setText(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

      Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

--- found anomaly call chain ----, num: 25
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/ProcessPrompter$1, getImage(Ljava/lang/Object;)Lorg/eclipse/swt/graphics/Image; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/LaunchImages, get(Ljava/lang/String;)Lorg/eclipse/swt/graphics/Image; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/ImageRegistry, get(Ljava/lang/String;)Lorg/eclipse/swt/graphics/Image; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/ResourceManager, createImageWithDefault(Lorg/eclipse/jface/resource/ImageDescriptor;)Lorg/eclipse/swt/graphics/Image; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, append(Ljava/lang/Object;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/Dialog, shortenText(Ljava/lang/String;Lorg/eclipse/swt/widgets/Control;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, internal_new_GC(Lorg/eclipse/swt/graphics/GCData;)J > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, getSystemFont()Lorg/eclipse/swt/graphics/Font; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/register/RegisterBitFieldVMNode$3, isEnabled(Lorg/eclipse/core/runtime/IStatus;Ljava/util/Map;)Z > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/register/RegisterBitFieldVMNode$6, isEnabled(Lorg/eclipse/core/runtime/IStatus;Ljava/util/Map;)Z > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/launch/StackFramesVMNode$1, isEnabled(Lorg/eclipse/core/runtime/IStatus;Ljava/util/Map;)Z > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/sourcelookup/DsfSourceDisplayAdapter$2, run()V > Context: Everywhere
   start: Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
      Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

--- found anomaly call chain ----, num: 26
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/sourcelookup/DsfSourceDisplayAdapter$2, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/sourcelookup/DsfSourceDisplayAdapter$2$1, <init>(Lorg/eclipse/cdt/dsf/debug/ui/sourcelookup/DsfSourceDisplayAdapter$2;Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;Lorg/eclipse/cdt/dsf/debug/service/IStack$IFrameDMContext;ZLorg/eclipse/ui/IWorkbenchPage;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/DataRequestMonitor, <init>(Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor, <init>(Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/DsfExecutable, <init>()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Thread, getStackTrace()[Ljava/lang/StackTraceElement; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/SecurityManager, checkPermission(Ljava/security/Permission;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/security/AccessController, checkPermission(Ljava/security/Permission;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Label, setText(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

      Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

--- found anomaly call chain ----, num: 27
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/sourcelookup/DsfSourceDisplayAdapter$2, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/sourcelookup/DsfSourceDisplayAdapter$2$1, <init>(Lorg/eclipse/cdt/dsf/debug/ui/sourcelookup/DsfSourceDisplayAdapter$2;Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;Lorg/eclipse/cdt/dsf/debug/service/IStack$IFrameDMContext;ZLorg/eclipse/ui/IWorkbenchPage;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/DataRequestMonitor, <init>(Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor, <init>(Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/DsfExecutable, <init>()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Thread, getStackTrace()[Ljava/lang/StackTraceElement; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/SecurityManager, checkPermission(Ljava/security/Permission;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/security/AccessController, checkPermission(Ljava/security/Permission;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/Dialog, shortenText(Ljava/lang/String;Lorg/eclipse/swt/widgets/Control;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, internal_new_GC(Lorg/eclipse/swt/graphics/GCData;)J > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, getSystemFont()Lorg/eclipse/swt/graphics/Font; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/text/REDFile$Buffer, avail()I > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/text/REDFile$Buffer, free()I > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/contexts/DsfSuspendTrigger$2$1, run()V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/contexts/DsfSuspendTrigger$2$1, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/launch/AbstractLaunchVMProvider$1, propertyChange(Lorg/eclipse/jface/util/PropertyChangeEvent;)V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/modules/detail/ModuleDetailPane$4, menuAboutToShow(Lorg/eclipse/jface/action/IMenuManager;)V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/variable/VariableVMNode$11, isEnabled(Lorg/eclipse/core/runtime/IStatus;Ljava/util/Map;)Z > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/actions/ActionGotoAddress$1, isValid(Ljava/lang/String;)Ljava/lang/String; > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyPart$30, run()V > Context: Everywhere
   start: Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
      Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

--- found anomaly call chain ----, num: 28
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyPart$30, run()V > Context: Everywhere
 -> Node: < Primordial, Ljava/io/PrintStream, println(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/io/PrintStream, newLine()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Thread, interrupt()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Thread, checkAccess()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/SecurityManager, checkAccess(Ljava/lang/Thread;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/SecurityManager, checkPermission(Ljava/security/Permission;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/security/AccessController, checkPermission(Ljava/security/Permission;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Label, setText(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

      Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

--- found anomaly call chain ----, num: 29
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyPart$30, run()V > Context: Everywhere
 -> Node: < Primordial, Ljava/io/PrintStream, println(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/io/PrintStream, newLine()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Thread, interrupt()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Thread, checkAccess()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/SecurityManager, checkAccess(Ljava/lang/Thread;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/SecurityManager, checkPermission(Ljava/security/Permission;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/security/AccessController, checkPermission(Ljava/security/Permission;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/Dialog, shortenText(Ljava/lang/String;Lorg/eclipse/swt/widgets/Control;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, internal_new_GC(Lorg/eclipse/swt/graphics/GCData;)J > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, getSystemFont()Lorg/eclipse/swt/graphics/Font; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/variable/VariableVMNode$5, isEnabled(Lorg/eclipse/core/runtime/IStatus;Ljava/util/Map;)Z > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/GdbServerDebuggerPage$1, dialogFieldChanged(Lorg/eclipse/cdt/debug/internal/ui/dialogfields/DialogField;)V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/ui/viewmodel/update/AbstractCachingVMProvider$1, toString()Ljava/lang/String; > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/register/RegisterGroupVMNode$2, run()V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/actions/DsfStepIntoCommand$1, doExecute()V > Context: Everywhere
   start: Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
      Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

--- found anomaly call chain ----, num: 30
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/actions/DsfStepIntoCommand$1, doExecute()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/actions/DsfStepIntoCommand$1$1, <init>(Lorg/eclipse/cdt/dsf/debug/ui/actions/DsfStepIntoCommand$1;Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;Lorg/eclipse/debug/core/commands/IEnabledStateRequest;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/DataRequestMonitor, <init>(Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor, <init>(Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/DsfExecutable, <init>()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Thread, getStackTrace()[Ljava/lang/StackTraceElement; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/SecurityManager, checkPermission(Ljava/security/Permission;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/security/AccessController, checkPermission(Ljava/security/Permission;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Label, setText(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

      Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

--- found anomaly call chain ----, num: 31
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/actions/DsfStepIntoCommand$1, doExecute()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/actions/DsfStepIntoCommand$1$1, <init>(Lorg/eclipse/cdt/dsf/debug/ui/actions/DsfStepIntoCommand$1;Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;Lorg/eclipse/debug/core/commands/IEnabledStateRequest;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/DataRequestMonitor, <init>(Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor, <init>(Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/DsfExecutable, <init>()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Thread, getStackTrace()[Ljava/lang/StackTraceElement; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/SecurityManager, checkPermission(Ljava/security/Permission;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/security/AccessController, checkPermission(Ljava/security/Permission;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/Dialog, shortenText(Ljava/lang/String;Lorg/eclipse/swt/widgets/Control;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, internal_new_GC(Lorg/eclipse/swt/graphics/GCData;)J > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, getSystemFont()Lorg/eclipse/swt/graphics/Font; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/ui/viewmodel/datamodel/AbstractDMVMNode$3, run()V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/ui/viewmodel/update/AbstractCachingVMProvider$ElementDataEntry, toString()Ljava/lang/String; > Context: Everywhere
   start: Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
      Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

--- found anomaly call chain ----, num: 32
Node: < Application, Lorg/eclipse/cdt/dsf/ui/viewmodel/update/AbstractCachingVMProvider$ElementDataEntry, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Label, setText(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

      Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

--- found anomaly call chain ----, num: 33
Node: < Application, Lorg/eclipse/cdt/dsf/ui/viewmodel/update/AbstractCachingVMProvider$ElementDataEntry, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/Dialog, shortenText(Ljava/lang/String;Lorg/eclipse/swt/widgets/Control;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, internal_new_GC(Lorg/eclipse/swt/graphics/GCData;)J > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, getSystemFont()Lorg/eclipse/swt/graphics/Font; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/GdbDebuggerPage$1, modifyText(Lorg/eclipse/swt/events/ModifyEvent;)V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyPart$6, run()V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/ui/viewmodel/AbstractVMAdapter$2, run()V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/ui/viewmodel/update/ManualUpdatePolicy$2, getUpdateFlags(Ljava/lang/Object;Lorg/eclipse/jface/viewers/TreePath;)I > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/ui/viewmodel/update/ManualUpdatePolicy$2, includes(Lorg/eclipse/cdt/dsf/ui/viewmodel/update/IElementUpdateTester;)Z > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/ui/viewmodel/update/ManualUpdatePolicy$2, toString()Ljava/lang/String; > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/register/RegisterVMNode$10, handleCompleted()V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/launch/StackFramesVMNode$14, handleCompleted()V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/CMainTab$9, getText(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
   start: Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
      Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

--- found anomaly call chain ----, num: 34
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/CMainTab$9, getText(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Label, setText(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

      Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

--- found anomaly call chain ----, num: 35
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/CMainTab$9, getText(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/Dialog, shortenText(Ljava/lang/String;Lorg/eclipse/swt/widgets/Control;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, internal_new_GC(Lorg/eclipse/swt/graphics/GCData;)J > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, getSystemFont()Lorg/eclipse/swt/graphics/Font; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/launch/AbstractThreadVMNode$1, isEnabled(Lorg/eclipse/core/runtime/IStatus;Ljava/util/Map;)Z > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/register/RegisterVMNode$5, isEnabled(Lorg/eclipse/core/runtime/IStatus;Ljava/util/Map;)Z > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/ui/viewmodel/update/ManualUpdatePolicy$1, getUpdateFlags(Ljava/lang/Object;Lorg/eclipse/jface/viewers/TreePath;)I > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/ui/viewmodel/update/ManualUpdatePolicy$1, includes(Lorg/eclipse/cdt/dsf/ui/viewmodel/update/IElementUpdateTester;)Z > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/ui/viewmodel/update/ManualUpdatePolicy$1, toString()Ljava/lang/String; > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/CMainTab$7, widgetSelected(Lorg/eclipse/swt/events/SelectionEvent;)V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyPart$36, run()V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/launch/StackFramesVMNode$10, handleCompleted()V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/sourcelookup/DsfSourceDisplayAdapter$DisplayJob, <init>(Lorg/eclipse/cdt/dsf/debug/ui/sourcelookup/DsfSourceDisplayAdapter;Lorg/eclipse/cdt/dsf/debug/ui/sourcelookup/SourceLookupResult;Lorg/eclipse/cdt/dsf/debug/ui/sourcelookup/DsfSourceDisplayAdapter$FrameData;Lorg/eclipse/ui/IWorkbenchPage;Z)V > Context: Everywhere
   start: Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
      Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

--- found anomaly call chain ----, num: 36
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/sourcelookup/DsfSourceDisplayAdapter$DisplayJob, <init>(Lorg/eclipse/cdt/dsf/debug/ui/sourcelookup/DsfSourceDisplayAdapter;Lorg/eclipse/cdt/dsf/debug/ui/sourcelookup/SourceLookupResult;Lorg/eclipse/cdt/dsf/debug/ui/sourcelookup/DsfSourceDisplayAdapter$FrameData;Lorg/eclipse/ui/IWorkbenchPage;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/sourcelookup/DsfSourceDisplayAdapter$DisplayJob$1, <init>(Lorg/eclipse/cdt/dsf/debug/ui/sourcelookup/DsfSourceDisplayAdapter$DisplayJob;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/DsfRunnable, <init>()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/DsfExecutable, <init>()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Thread, getStackTrace()[Ljava/lang/StackTraceElement; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/SecurityManager, checkPermission(Ljava/security/Permission;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/security/AccessController, checkPermission(Ljava/security/Permission;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Label, setText(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

      Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

--- found anomaly call chain ----, num: 37
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/sourcelookup/DsfSourceDisplayAdapter$DisplayJob, <init>(Lorg/eclipse/cdt/dsf/debug/ui/sourcelookup/DsfSourceDisplayAdapter;Lorg/eclipse/cdt/dsf/debug/ui/sourcelookup/SourceLookupResult;Lorg/eclipse/cdt/dsf/debug/ui/sourcelookup/DsfSourceDisplayAdapter$FrameData;Lorg/eclipse/ui/IWorkbenchPage;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/sourcelookup/DsfSourceDisplayAdapter$DisplayJob$1, <init>(Lorg/eclipse/cdt/dsf/debug/ui/sourcelookup/DsfSourceDisplayAdapter$DisplayJob;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/DsfRunnable, <init>()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/DsfExecutable, <init>()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Thread, getStackTrace()[Ljava/lang/StackTraceElement; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/SecurityManager, checkPermission(Ljava/security/Permission;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/security/AccessController, checkPermission(Ljava/security/Permission;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/Dialog, shortenText(Ljava/lang/String;Lorg/eclipse/swt/widgets/Control;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, internal_new_GC(Lorg/eclipse/swt/graphics/GCData;)J > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, getSystemFont()Lorg/eclipse/swt/graphics/Font; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/sourcelookup/DsfSourceDisplayAdapter$DisplayJob, runInUIThread(Lorg/eclipse/core/runtime/IProgressMonitor;)Lorg/eclipse/core/runtime/IStatus; > Context: Everywhere
   start: Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
      Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

--- found anomaly call chain ----, num: 38
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/sourcelookup/DsfSourceDisplayAdapter$DisplayJob, runInUIThread(Lorg/eclipse/core/runtime/IProgressMonitor;)Lorg/eclipse/core/runtime/IStatus; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/sourcelookup/DsfSourceDisplayAdapter$DisplayJob, positionEditor(Lorg/eclipse/ui/texteditor/ITextEditor;Lorg/eclipse/cdt/dsf/debug/ui/sourcelookup/DsfSourceDisplayAdapter$FrameData;)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/runtime/jobs/Job, schedule(J)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/InternalJob, schedule(J)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/JobManager, schedule(Lorg/eclipse/core/internal/jobs/InternalJob;JZ)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Label, setText(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

      Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

--- found anomaly call chain ----, num: 39
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/sourcelookup/DsfSourceDisplayAdapter$DisplayJob, runInUIThread(Lorg/eclipse/core/runtime/IProgressMonitor;)Lorg/eclipse/core/runtime/IStatus; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/sourcelookup/DsfSourceDisplayAdapter$DisplayJob, positionEditor(Lorg/eclipse/ui/texteditor/ITextEditor;Lorg/eclipse/cdt/dsf/debug/ui/sourcelookup/DsfSourceDisplayAdapter$FrameData;)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/runtime/jobs/Job, schedule(J)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/InternalJob, schedule(J)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/JobManager, schedule(Lorg/eclipse/core/internal/jobs/InternalJob;JZ)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/Dialog, shortenText(Ljava/lang/String;Lorg/eclipse/swt/widgets/Control;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, internal_new_GC(Lorg/eclipse/swt/graphics/GCData;)J > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, getSystemFont()Lorg/eclipse/swt/graphics/Font; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/register/RegisterVMNode$3, isEnabled(Lorg/eclipse/core/runtime/IStatus;Ljava/util/Map;)Z > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/WorkingDirectoryBlock$WidgetListener, modifyText(Lorg/eclipse/swt/events/ModifyEvent;)V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/WorkingDirectoryBlock$WidgetListener, widgetSelected(Lorg/eclipse/swt/events/SelectionEvent;)V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/register/RegisterGroupVMNode$4, run()V > Context: Everywhere
   start: Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
      Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

--- found anomaly call chain ----, num: 40
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/register/RegisterGroupVMNode$4, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/register/RegisterGroupVMNode$4$1, <init>(Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/register/RegisterGroupVMNode$4;Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;Lorg/eclipse/cdt/dsf/concurrent/DataRequestMonitor;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/DataRequestMonitor, <init>(Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor, <init>(Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/DsfExecutable, <init>()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Thread, getStackTrace()[Ljava/lang/StackTraceElement; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/SecurityManager, checkPermission(Ljava/security/Permission;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/security/AccessController, checkPermission(Ljava/security/Permission;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Label, setText(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

      Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

--- found anomaly call chain ----, num: 41
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/register/RegisterGroupVMNode$4, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/register/RegisterGroupVMNode$4$1, <init>(Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/register/RegisterGroupVMNode$4;Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;Lorg/eclipse/cdt/dsf/concurrent/DataRequestMonitor;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/DataRequestMonitor, <init>(Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor, <init>(Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/DsfExecutable, <init>()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Thread, getStackTrace()[Ljava/lang/StackTraceElement; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/SecurityManager, checkPermission(Ljava/security/Permission;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/security/AccessController, checkPermission(Ljava/security/Permission;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/Dialog, shortenText(Ljava/lang/String;Lorg/eclipse/swt/widgets/Control;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, internal_new_GC(Lorg/eclipse/swt/graphics/GCData;)J > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, getSystemFont()Lorg/eclipse/swt/graphics/Font; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyPart$15, handleCompleted()V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$AddDirectoryDialog, <init>(Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock;Lorg/eclipse/swt/widgets/Shell;)V > Context: Everywhere
   start: Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
      Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

--- found anomaly call chain ----, num: 42
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$AddDirectoryDialog, <init>(Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock;Lorg/eclipse/swt/widgets/Shell;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/Dialog, <init>(Lorg/eclipse/swt/widgets/Shell;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, append(Ljava/lang/Object;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Label, setText(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

      Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

--- found anomaly call chain ----, num: 43
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$AddDirectoryDialog, <init>(Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock;Lorg/eclipse/swt/widgets/Shell;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/Dialog, <init>(Lorg/eclipse/swt/widgets/Shell;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, append(Ljava/lang/Object;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/Dialog, shortenText(Ljava/lang/String;Lorg/eclipse/swt/widgets/Control;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, internal_new_GC(Lorg/eclipse/swt/graphics/GCData;)J > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, getSystemFont()Lorg/eclipse/swt/graphics/Font; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$AddDirectoryDialog, getValue()Lorg/eclipse/core/runtime/IPath; > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/launch/StackFramesVMNode$3, isEnabled(Lorg/eclipse/core/runtime/IStatus;Ljava/util/Map;)Z > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyPart$29, run()V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyView$1, selectionChanged(Lorg/eclipse/ui/IWorkbenchPart;Lorg/eclipse/jface/viewers/ISelection;)V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyPart$ActionToggleFunctionColumn, run()V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyPart$ActionToggleFunctionColumn, update()V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$AddDirectoryDialog$2, widgetSelected(Lorg/eclipse/swt/events/SelectionEvent;)V > Context: Everywhere
   start: Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
      Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

--- found anomaly call chain ----, num: 44
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$AddDirectoryDialog$2, widgetSelected(Lorg/eclipse/swt/events/SelectionEvent;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Text, setText(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Label, setText(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

      Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

--- found anomaly call chain ----, num: 45
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$AddDirectoryDialog$2, widgetSelected(Lorg/eclipse/swt/events/SelectionEvent;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Text, setText(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/Dialog, shortenText(Ljava/lang/String;Lorg/eclipse/swt/widgets/Control;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, internal_new_GC(Lorg/eclipse/swt/graphics/GCData;)J > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, getSystemFont()Lorg/eclipse/swt/graphics/Font; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyPart$33, run()V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/GdbDebuggerPage$3, modifyText(Lorg/eclipse/swt/events/ModifyEvent;)V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/expression/VMExpressionUpdate, getExpression()Lorg/eclipse/debug/core/model/IExpression; > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/expression/VMExpressionUpdate, setExpressionElement(Ljava/lang/Object;)V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/expression/VMExpressionUpdate, toString()Ljava/lang/String; > Context: Everywhere
   start: Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
      Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

--- found anomaly call chain ----, num: 46
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/expression/VMExpressionUpdate, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Label, setText(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

      Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

--- found anomaly call chain ----, num: 47
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/expression/VMExpressionUpdate, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/Dialog, shortenText(Ljava/lang/String;Lorg/eclipse/swt/widgets/Control;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, internal_new_GC(Lorg/eclipse/swt/graphics/GCData;)J > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, getSystemFont()Lorg/eclipse/swt/graphics/Font; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/expression/VMExpressionUpdate, done()V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyRulerColumn$MouseHandler, mouseUp(Lorg/eclipse/swt/events/MouseEvent;)V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyRulerColumn$MouseHandler, mouseDown(Lorg/eclipse/swt/events/MouseEvent;)V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyRulerColumn$MouseHandler, mouseDoubleClick(Lorg/eclipse/swt/events/MouseEvent;)V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyRulerColumn$MouseHandler, mouseMove(Lorg/eclipse/swt/events/MouseEvent;)V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyRulerColumn$MouseHandler, mouseEnter(Lorg/eclipse/swt/events/MouseEvent;)V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyRulerColumn$MouseHandler, mouseExit(Lorg/eclipse/swt/events/MouseEvent;)V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyRulerColumn$MouseHandler, mouseHover(Lorg/eclipse/swt/events/MouseEvent;)V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/launch/StackFramesVMNode$13, handleCompleted()V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyPart$20, handleCompleted()V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/variable/VariableVMNode$13, isEnabled(Lorg/eclipse/core/runtime/IStatus;Ljava/util/Map;)Z > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/actions/DsfSuspendCommand$1, doExecute()V > Context: Everywhere
   start: Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
      Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

--- found anomaly call chain ----, num: 48
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/actions/DsfSuspendCommand$1, doExecute()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/actions/DsfSuspendCommand$1$1, <init>(Lorg/eclipse/cdt/dsf/debug/ui/actions/DsfSuspendCommand$1;Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;Lorg/eclipse/debug/core/commands/IEnabledStateRequest;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/DataRequestMonitor, <init>(Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor, <init>(Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/DsfExecutable, <init>()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Thread, getStackTrace()[Ljava/lang/StackTraceElement; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/SecurityManager, checkPermission(Ljava/security/Permission;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/security/AccessController, checkPermission(Ljava/security/Permission;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Label, setText(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

      Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

--- found anomaly call chain ----, num: 49
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/actions/DsfSuspendCommand$1, doExecute()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/actions/DsfSuspendCommand$1$1, <init>(Lorg/eclipse/cdt/dsf/debug/ui/actions/DsfSuspendCommand$1;Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;Lorg/eclipse/debug/core/commands/IEnabledStateRequest;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/DataRequestMonitor, <init>(Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor, <init>(Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/DsfExecutable, <init>()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Thread, getStackTrace()[Ljava/lang/StackTraceElement; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/SecurityManager, checkPermission(Ljava/security/Permission;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/security/AccessController, checkPermission(Ljava/security/Permission;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/Dialog, shortenText(Ljava/lang/String;Lorg/eclipse/swt/widgets/Control;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, internal_new_GC(Lorg/eclipse/swt/graphics/GCData;)J > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, getSystemFont()Lorg/eclipse/swt/graphics/Font; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/launch/StackFramesVMNode$5, isEnabled(Lorg/eclipse/core/runtime/IStatus;Ljava/util/Map;)Z > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/actions/GdbReverseToggleCommand$3, execute(Lorg/eclipse/cdt/dsf/concurrent/DataRequestMonitor;)V > Context: Everywhere
   start: Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
      Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

--- found anomaly call chain ----, num: 50
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/actions/GdbReverseToggleCommand$3, execute(Lorg/eclipse/cdt/dsf/concurrent/DataRequestMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor, done()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Label, setText(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

      Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

--- found anomaly call chain ----, num: 51
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/actions/GdbReverseToggleCommand$3, execute(Lorg/eclipse/cdt/dsf/concurrent/DataRequestMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor, done()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/Dialog, shortenText(Ljava/lang/String;Lorg/eclipse/swt/widgets/Control;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, internal_new_GC(Lorg/eclipse/swt/graphics/GCData;)J > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, getSystemFont()Lorg/eclipse/swt/graphics/Font; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/register/RegisterBitFieldVMNode$9, run()V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyViewer$ResizeListener, controlResized(Lorg/eclipse/swt/events/ControlEvent;)V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyViewer$ResizeListener, controlMoved(Lorg/eclipse/swt/events/ControlEvent;)V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/viewmodel/launch/ContainerVMNode$2, handleCompleted()V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyPart$17, handleCompleted()V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/register/RegisterBitFieldVMNode$15, run()V > Context: Everywhere
   start: Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
      Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

--- found anomaly call chain ----, num: 52
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/register/RegisterBitFieldVMNode$15, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/register/RegisterBitFieldVMNode$15$1, <init>(Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/register/RegisterBitFieldVMNode$15;Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;Lorg/eclipse/debug/internal/ui/viewers/model/provisional/IElementMementoRequest;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/DataRequestMonitor, <init>(Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor, <init>(Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/DsfExecutable, <init>()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Thread, getStackTrace()[Ljava/lang/StackTraceElement; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/SecurityManager, checkPermission(Ljava/security/Permission;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/security/AccessController, checkPermission(Ljava/security/Permission;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Label, setText(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

      Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

--- found anomaly call chain ----, num: 53
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/register/RegisterBitFieldVMNode$15, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/register/RegisterBitFieldVMNode$15$1, <init>(Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/register/RegisterBitFieldVMNode$15;Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;Lorg/eclipse/debug/internal/ui/viewers/model/provisional/IElementMementoRequest;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/DataRequestMonitor, <init>(Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor, <init>(Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/DsfExecutable, <init>()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Thread, getStackTrace()[Ljava/lang/StackTraceElement; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/SecurityManager, checkPermission(Ljava/security/Permission;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/security/AccessController, checkPermission(Ljava/security/Permission;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/Dialog, shortenText(Ljava/lang/String;Lorg/eclipse/swt/widgets/Control;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, internal_new_GC(Lorg/eclipse/swt/graphics/GCData;)J > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, getSystemFont()Lorg/eclipse/swt/graphics/Font; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyRulerColumn$MouseHandler$2, run()V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/sourcelookup/DsfSourceDisplayAdapter$ClearingJob, <init>(Lorg/eclipse/cdt/dsf/debug/ui/sourcelookup/DsfSourceDisplayAdapter;Ljava/util/Set;)V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/sourcelookup/DsfSourceDisplayAdapter$ClearingJob, runInUIThread(Lorg/eclipse/core/runtime/IProgressMonitor;)Lorg/eclipse/core/runtime/IStatus; > Context: Everywhere
   start: Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
      Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

--- found anomaly call chain ----, num: 54
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/sourcelookup/DsfSourceDisplayAdapter$ClearingJob, runInUIThread(Lorg/eclipse/core/runtime/IProgressMonitor;)Lorg/eclipse/core/runtime/IStatus; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/sourcelookup/DsfSourceDisplayAdapter$ClearingJob$1, <init>(Lorg/eclipse/cdt/dsf/debug/ui/sourcelookup/DsfSourceDisplayAdapter$ClearingJob;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/DsfRunnable, <init>()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/DsfExecutable, <init>()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Thread, getStackTrace()[Ljava/lang/StackTraceElement; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/SecurityManager, checkPermission(Ljava/security/Permission;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/security/AccessController, checkPermission(Ljava/security/Permission;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Label, setText(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

      Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

--- found anomaly call chain ----, num: 55
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/sourcelookup/DsfSourceDisplayAdapter$ClearingJob, runInUIThread(Lorg/eclipse/core/runtime/IProgressMonitor;)Lorg/eclipse/core/runtime/IStatus; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/sourcelookup/DsfSourceDisplayAdapter$ClearingJob$1, <init>(Lorg/eclipse/cdt/dsf/debug/ui/sourcelookup/DsfSourceDisplayAdapter$ClearingJob;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/DsfRunnable, <init>()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/DsfExecutable, <init>()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Thread, getStackTrace()[Ljava/lang/StackTraceElement; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/SecurityManager, checkPermission(Ljava/security/Permission;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/security/AccessController, checkPermission(Ljava/security/Permission;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/Dialog, shortenText(Ljava/lang/String;Lorg/eclipse/swt/widgets/Control;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, internal_new_GC(Lorg/eclipse/swt/graphics/GCData;)J > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, getSystemFont()Lorg/eclipse/swt/graphics/Font; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/viewmodel/actions/UpdateScopesContribution$1, fill(Lorg/eclipse/swt/widgets/Menu;I)V > Context: Everywhere
   start: Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
      Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

--- found anomaly call chain ----, num: 56
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/viewmodel/actions/UpdateScopesContribution$1, fill(Lorg/eclipse/swt/widgets/Menu;I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/MenuItem, setEnabled(Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, error(I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/SWT, error(I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/SWT, error(ILjava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/SWT, error(ILjava/lang/Throwable;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Label, setText(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

      Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

--- found anomaly call chain ----, num: 57
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/viewmodel/actions/UpdateScopesContribution$1, fill(Lorg/eclipse/swt/widgets/Menu;I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/MenuItem, setEnabled(Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, error(I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/SWT, error(I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/SWT, error(ILjava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/SWT, error(ILjava/lang/Throwable;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/Dialog, shortenText(Ljava/lang/String;Lorg/eclipse/swt/widgets/Control;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, internal_new_GC(Lorg/eclipse/swt/graphics/GCData;)J > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, getSystemFont()Lorg/eclipse/swt/graphics/Font; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/viewmodel/actions/UpdateScopesContribution$1, isEnabled()Z > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/ui/concurrent/DisplayDsfExecutor$2$1, run()V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/modules/ModulesVMProvider$1, run()V > Context: Everywhere
   start: Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
      Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

--- found anomaly call chain ----, num: 58
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/modules/ModulesVMProvider$1, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/service/DsfServicesTracker, <init>(Lorg/osgi/framework/BundleContext;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AssertionError, <init>(Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Label, setText(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

      Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

--- found anomaly call chain ----, num: 59
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/modules/ModulesVMProvider$1, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/service/DsfServicesTracker, <init>(Lorg/osgi/framework/BundleContext;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AssertionError, <init>(Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/Dialog, shortenText(Ljava/lang/String;Lorg/eclipse/swt/widgets/Control;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, internal_new_GC(Lorg/eclipse/swt/graphics/GCData;)J > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, getSystemFont()Lorg/eclipse/swt/graphics/Font; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/register/RegisterVMNode$7, run()V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/launch/AbstractContainerVMNode$1, isEnabled(Lorg/eclipse/core/runtime/IStatus;Ljava/util/Map;)Z > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/actions/GdbReverseToggleCommand$1, execute(Lorg/eclipse/cdt/dsf/concurrent/DataRequestMonitor;)V > Context: Everywhere
   start: Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
      Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

--- found anomaly call chain ----, num: 60
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/actions/GdbReverseToggleCommand$1, execute(Lorg/eclipse/cdt/dsf/concurrent/DataRequestMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor, done()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Label, setText(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

      Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

--- found anomaly call chain ----, num: 61
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/actions/GdbReverseToggleCommand$1, execute(Lorg/eclipse/cdt/dsf/concurrent/DataRequestMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor, done()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/Dialog, shortenText(Ljava/lang/String;Lorg/eclipse/swt/widgets/Control;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, internal_new_GC(Lorg/eclipse/swt/graphics/GCData;)J > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, getSystemFont()Lorg/eclipse/swt/graphics/Font; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyPart$PropertyChangeListener, propertyChange(Lorg/eclipse/jface/util/PropertyChangeEvent;)V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/viewmodel/numberformat/detail/NumberFormatDetailPane$2, selectionChanged(Lorg/eclipse/jface/viewers/SelectionChangedEvent;)V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/sourcelookup/DsfSourceDisplayAdapter$LookupJob$1, run()V > Context: Everywhere
   start: Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
      Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

--- found anomaly call chain ----, num: 62
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/sourcelookup/DsfSourceDisplayAdapter$LookupJob$1, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/sourcelookup/DsfSourceDisplayAdapter, access$4(Lorg/eclipse/cdt/dsf/debug/ui/sourcelookup/DsfSourceDisplayAdapter;Lorg/eclipse/cdt/dsf/debug/ui/sourcelookup/SourceLookupResult;Lorg/eclipse/cdt/dsf/debug/ui/sourcelookup/DsfSourceDisplayAdapter$FrameData;Lorg/eclipse/ui/IWorkbenchPage;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/sourcelookup/DsfSourceDisplayAdapter, startDisplayJob(Lorg/eclipse/cdt/dsf/debug/ui/sourcelookup/SourceLookupResult;Lorg/eclipse/cdt/dsf/debug/ui/sourcelookup/DsfSourceDisplayAdapter$FrameData;Lorg/eclipse/ui/IWorkbenchPage;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/runtime/jobs/Job, schedule()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/InternalJob, schedule(J)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/JobManager, schedule(Lorg/eclipse/core/internal/jobs/InternalJob;JZ)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Label, setText(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

      Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

--- found anomaly call chain ----, num: 63
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/sourcelookup/DsfSourceDisplayAdapter$LookupJob$1, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/sourcelookup/DsfSourceDisplayAdapter, access$4(Lorg/eclipse/cdt/dsf/debug/ui/sourcelookup/DsfSourceDisplayAdapter;Lorg/eclipse/cdt/dsf/debug/ui/sourcelookup/SourceLookupResult;Lorg/eclipse/cdt/dsf/debug/ui/sourcelookup/DsfSourceDisplayAdapter$FrameData;Lorg/eclipse/ui/IWorkbenchPage;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/sourcelookup/DsfSourceDisplayAdapter, startDisplayJob(Lorg/eclipse/cdt/dsf/debug/ui/sourcelookup/SourceLookupResult;Lorg/eclipse/cdt/dsf/debug/ui/sourcelookup/DsfSourceDisplayAdapter$FrameData;Lorg/eclipse/ui/IWorkbenchPage;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/runtime/jobs/Job, schedule()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/InternalJob, schedule(J)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/JobManager, schedule(Lorg/eclipse/core/internal/jobs/InternalJob;JZ)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/Dialog, shortenText(Ljava/lang/String;Lorg/eclipse/swt/widgets/Control;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, internal_new_GC(Lorg/eclipse/swt/graphics/GCData;)J > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, getSystemFont()Lorg/eclipse/swt/graphics/Font; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/actions/GdbConnectCommand$1, execute(Lorg/eclipse/cdt/dsf/concurrent/DataRequestMonitor;)V > Context: Everywhere
   start: Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
      Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

--- found anomaly call chain ----, num: 64
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/actions/GdbConnectCommand$1, execute(Lorg/eclipse/cdt/dsf/concurrent/DataRequestMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor, done()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Label, setText(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

      Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

--- found anomaly call chain ----, num: 65
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/actions/GdbConnectCommand$1, execute(Lorg/eclipse/cdt/dsf/concurrent/DataRequestMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor, done()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/Dialog, shortenText(Ljava/lang/String;Lorg/eclipse/swt/widgets/Control;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, internal_new_GC(Lorg/eclipse/swt/graphics/GCData;)J > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, getSystemFont()Lorg/eclipse/swt/graphics/Font; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyPart$11, run()V > Context: Everywhere
   start: Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
      Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

--- found anomaly call chain ----, num: 66
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyPart$11, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyPart$11$1, <init>(Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyPart$11;Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/DataRequestMonitor, <init>(Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor, <init>(Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/DsfExecutable, <init>()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Thread, getStackTrace()[Ljava/lang/StackTraceElement; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/SecurityManager, checkPermission(Ljava/security/Permission;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/security/AccessController, checkPermission(Ljava/security/Permission;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Label, setText(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

      Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

--- found anomaly call chain ----, num: 67
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyPart$11, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyPart$11$1, <init>(Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyPart$11;Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/DataRequestMonitor, <init>(Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor, <init>(Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/DsfExecutable, <init>()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Thread, getStackTrace()[Ljava/lang/StackTraceElement; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/SecurityManager, checkPermission(Ljava/security/Permission;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/security/AccessController, checkPermission(Ljava/security/Permission;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/Dialog, shortenText(Ljava/lang/String;Lorg/eclipse/swt/widgets/Control;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, internal_new_GC(Lorg/eclipse/swt/graphics/GCData;)J > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, getSystemFont()Lorg/eclipse/swt/graphics/Font; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/sourcelookup/SourceLookupResult, <init>(Lorg/eclipse/cdt/dsf/datamodel/IDMContext;Ljava/lang/Object;Ljava/lang/String;Lorg/eclipse/ui/IEditorInput;)V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/sourcelookup/SourceLookupResult, getDmc()Lorg/eclipse/cdt/dsf/datamodel/IDMContext; > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/sourcelookup/SourceLookupResult, getSourceElement()Ljava/lang/Object; > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/sourcelookup/SourceLookupResult, getEditorId()Ljava/lang/String; > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/sourcelookup/SourceLookupResult, getEditorInput()Lorg/eclipse/ui/IEditorInput; > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/sourcelookup/SourceLookupResult, updateArtifact(Lorg/eclipse/cdt/dsf/datamodel/IDMContext;)V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/actions/ProcessInfo, <init>(Ljava/lang/String;Ljava/lang/String;)V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/actions/ProcessInfo, <init>(ILjava/lang/String;)V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/actions/ProcessInfo, getName()Ljava/lang/String; > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/actions/ProcessInfo, getPid()I > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/actions/ProcessInfo, compareTo(Lorg/eclipse/cdt/dsf/gdb/internal/ui/actions/ProcessInfo;)I > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/actions/ProcessInfo, compareTo(Ljava/lang/Object;)I > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/launch/DelayedStackRefreshUpdatePolicy$ThreadsUpdateTester, getUpdateFlags(Ljava/lang/Object;Lorg/eclipse/jface/viewers/TreePath;)I > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/launch/DelayedStackRefreshUpdatePolicy$ThreadsUpdateTester, includes(Lorg/eclipse/cdt/dsf/ui/viewmodel/update/IElementUpdateTester;)Z > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/launch/DelayedStackRefreshUpdatePolicy$ThreadsUpdateTester, toString()Ljava/lang/String; > Context: Everywhere
   start: Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
      Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

--- found anomaly call chain ----, num: 68
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/launch/DelayedStackRefreshUpdatePolicy$ThreadsUpdateTester, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Label, setText(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

      Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

--- found anomaly call chain ----, num: 69
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/launch/DelayedStackRefreshUpdatePolicy$ThreadsUpdateTester, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/Dialog, shortenText(Ljava/lang/String;Lorg/eclipse/swt/widgets/Control;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, internal_new_GC(Lorg/eclipse/swt/graphics/GCData;)J > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, getSystemFont()Lorg/eclipse/swt/graphics/Font; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/variable/VariableVMNode$20$2, handleCompleted()V > Context: Everywhere
   start: Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
      Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

--- found anomaly call chain ----, num: 70
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/variable/VariableVMNode$20$2, handleCompleted()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/MultiRequestMonitor, requestMonitorDone(Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor, done()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Label, setText(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

      Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

--- found anomaly call chain ----, num: 71
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/variable/VariableVMNode$20$2, handleCompleted()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/MultiRequestMonitor, requestMonitorDone(Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor, done()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/Dialog, shortenText(Ljava/lang/String;Lorg/eclipse/swt/widgets/Control;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, internal_new_GC(Lorg/eclipse/swt/graphics/GCData;)J > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, getSystemFont()Lorg/eclipse/swt/graphics/Font; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/viewmodel/launch/ThreadVMNode$1, isEnabled(Lorg/eclipse/core/runtime/IStatus;Ljava/util/Map;)Z > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
   start: Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
      Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

--- found anomaly call chain ----, num: 72
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/Dialog, shortenText(Ljava/lang/String;Lorg/eclipse/swt/widgets/Control;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Label, setText(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

      Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

--- found anomaly call chain ----, num: 73
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/Dialog, shortenText(Ljava/lang/String;Lorg/eclipse/swt/widgets/Control;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/Dialog, shortenText(Ljava/lang/String;Lorg/eclipse/swt/widgets/Control;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, internal_new_GC(Lorg/eclipse/swt/graphics/GCData;)J > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, getSystemFont()Lorg/eclipse/swt/graphics/Font; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/variable/VariableVMNode$6, isEnabled(Lorg/eclipse/core/runtime/IStatus;Ljava/util/Map;)Z > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/register/RegisterVMNode$13, run()V > Context: Everywhere
   start: Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
      Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

--- found anomaly call chain ----, num: 74
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/register/RegisterVMNode$13, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/register/RegisterVMNode$13$1, <init>(Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/register/RegisterVMNode$13;Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;Lorg/eclipse/debug/internal/ui/viewers/model/provisional/IElementMementoRequest;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/DataRequestMonitor, <init>(Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor, <init>(Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/DsfExecutable, <init>()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Thread, getStackTrace()[Ljava/lang/StackTraceElement; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/SecurityManager, checkPermission(Ljava/security/Permission;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/security/AccessController, checkPermission(Ljava/security/Permission;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Label, setText(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

      Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

--- found anomaly call chain ----, num: 75
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/register/RegisterVMNode$13, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/register/RegisterVMNode$13$1, <init>(Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/register/RegisterVMNode$13;Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;Lorg/eclipse/debug/internal/ui/viewers/model/provisional/IElementMementoRequest;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/DataRequestMonitor, <init>(Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor, <init>(Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/DsfExecutable, <init>()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Thread, getStackTrace()[Ljava/lang/StackTraceElement; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/SecurityManager, checkPermission(Ljava/security/Permission;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/security/AccessController, checkPermission(Ljava/security/Permission;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/Dialog, shortenText(Ljava/lang/String;Lorg/eclipse/swt/widgets/Control;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, internal_new_GC(Lorg/eclipse/swt/graphics/GCData;)J > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, getSystemFont()Lorg/eclipse/swt/graphics/Font; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/launch/AbstractThreadVMNode$3, run()V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/CMainTab$8, getText(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
   start: Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
      Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

--- found anomaly call chain ----, num: 76
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/CMainTab$8, getText(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/ui/CElementLabelProvider, getText(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/LabelProvider, getText(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Label, setText(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

      Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

--- found anomaly call chain ----, num: 77
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/CMainTab$8, getText(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/ui/CElementLabelProvider, getText(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/LabelProvider, getText(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/Dialog, shortenText(Ljava/lang/String;Lorg/eclipse/swt/widgets/Control;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, internal_new_GC(Lorg/eclipse/swt/graphics/GCData;)J > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, getSystemFont()Lorg/eclipse/swt/graphics/Font; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/CMainTab$8, getImage(Ljava/lang/Object;)Lorg/eclipse/swt/graphics/Image; > Context: Everywhere
   start: Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
      Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

--- found anomaly call chain ----, num: 78
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/CMainTab$8, getImage(Ljava/lang/Object;)Lorg/eclipse/swt/graphics/Image; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/ui/CElementLabelProvider, getImage(Ljava/lang/Object;)Lorg/eclipse/swt/graphics/Image; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/internal/ui/viewsupport/CElementImageProvider, getImageLabel(Ljava/lang/Object;I)Lorg/eclipse/swt/graphics/Image; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/core/model/CoreModel, isValidTranslationUnitName(Lorg/eclipse/core/resources/IProject;Ljava/lang/String;)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/core/CCorePlugin, getContentType(Lorg/eclipse/core/resources/IProject;Ljava/lang/String;)Lorg/eclipse/core/runtime/content/IContentType; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/internal/core/CContentTypes, getContentType(Lorg/eclipse/core/resources/IProject;Ljava/lang/String;)Lorg/eclipse/core/runtime/content/IContentType; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/internal/core/pdom/indexer/IndexerPreferences, preferDefaultLanguage(Lorg/eclipse/core/resources/IProject;)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/internal/core/pdom/indexer/IndexerPreferences, getPreferences(Lorg/eclipse/core/resources/IProject;)[Lorg/osgi/service/prefs/Preferences; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/internal/core/pdom/indexer/IndexerPreferences, getScope(Lorg/eclipse/core/resources/IProject;)I > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/internal/core/CCoreInternals, savePreferences(Lorg/eclipse/core/resources/IProject;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/runtime/jobs/Job, schedule()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/InternalJob, schedule(J)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/JobManager, schedule(Lorg/eclipse/core/internal/jobs/InternalJob;JZ)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Label, setText(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

      Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

--- found anomaly call chain ----, num: 79
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/CMainTab$8, getImage(Ljava/lang/Object;)Lorg/eclipse/swt/graphics/Image; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/ui/CElementLabelProvider, getImage(Ljava/lang/Object;)Lorg/eclipse/swt/graphics/Image; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/internal/ui/viewsupport/CElementImageProvider, getImageLabel(Ljava/lang/Object;I)Lorg/eclipse/swt/graphics/Image; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/core/model/CoreModel, isValidTranslationUnitName(Lorg/eclipse/core/resources/IProject;Ljava/lang/String;)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/core/CCorePlugin, getContentType(Lorg/eclipse/core/resources/IProject;Ljava/lang/String;)Lorg/eclipse/core/runtime/content/IContentType; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/internal/core/CContentTypes, getContentType(Lorg/eclipse/core/resources/IProject;Ljava/lang/String;)Lorg/eclipse/core/runtime/content/IContentType; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/internal/core/pdom/indexer/IndexerPreferences, preferDefaultLanguage(Lorg/eclipse/core/resources/IProject;)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/internal/core/pdom/indexer/IndexerPreferences, getPreferences(Lorg/eclipse/core/resources/IProject;)[Lorg/osgi/service/prefs/Preferences; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/internal/core/pdom/indexer/IndexerPreferences, getScope(Lorg/eclipse/core/resources/IProject;)I > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/internal/core/CCoreInternals, savePreferences(Lorg/eclipse/core/resources/IProject;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/runtime/jobs/Job, schedule()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/InternalJob, schedule(J)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/JobManager, schedule(Lorg/eclipse/core/internal/jobs/InternalJob;JZ)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/Dialog, shortenText(Ljava/lang/String;Lorg/eclipse/swt/widgets/Control;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, internal_new_GC(Lorg/eclipse/swt/graphics/GCData;)J > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, getSystemFont()Lorg/eclipse/swt/graphics/Font; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/GdbDebuggerPage$2, widgetSelected(Lorg/eclipse/swt/events/SelectionEvent;)V > Context: Everywhere
   start: Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
      Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

--- found anomaly call chain ----, num: 80
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/GdbDebuggerPage$2, widgetSelected(Lorg/eclipse/swt/events/SelectionEvent;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/GdbDebuggerPage$2, handleGDBButtonSelected()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/FileDialog, open()Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Label, setText(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

      Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

--- found anomaly call chain ----, num: 81
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/GdbDebuggerPage$2, widgetSelected(Lorg/eclipse/swt/events/SelectionEvent;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/GdbDebuggerPage$2, handleGDBButtonSelected()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/FileDialog, open()Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/Dialog, shortenText(Ljava/lang/String;Lorg/eclipse/swt/widgets/Control;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, internal_new_GC(Lorg/eclipse/swt/graphics/GCData;)J > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, getSystemFont()Lorg/eclipse/swt/graphics/Font; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyPart$31, run()V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyPart$15$1, run()V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/ui/viewmodel/datamodel/AbstractDMVMNode$2, run()V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/launch/AbstractLaunchVMProvider$5, run()V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/modules/ModulesVMNode$2, handleCompleted()V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/modules/detail/ModuleDetailPane$DetailJob$1, runInUIThread(Lorg/eclipse/core/runtime/IProgressMonitor;)Lorg/eclipse/core/runtime/IStatus; > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/register/RegisterBitFieldVMNode$5, isEnabled(Lorg/eclipse/core/runtime/IStatus;Ljava/util/Map;)Z > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/preferences/StringWithBooleanFieldEditor$1, widgetSelected(Lorg/eclipse/swt/events/SelectionEvent;)V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/TCPSettingsBlock$2, dialogFieldChanged(Lorg/eclipse/cdt/debug/internal/ui/dialogfields/DialogField;)V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/viewmodel/actions/UpdatePoliciesContribution$SelectUpdatePolicyAction, run()V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/GdbDebuggerPage$5, widgetSelected(Lorg/eclipse/swt/events/SelectionEvent;)V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyPart$ActionToggleAddressColumn, run()V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyPart$ActionToggleAddressColumn, update()V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/variable/VariableVMNode$7, isEnabled(Lorg/eclipse/core/runtime/IStatus;Ljava/util/Map;)Z > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/preferences/DecoratingIntegerFieldEditor$1, focusGained(Lorg/eclipse/swt/events/FocusEvent;)V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/GdbCoreDebuggerPage$1, modifyText(Lorg/eclipse/swt/events/ModifyEvent;)V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/ui/viewmodel/update/MultiLevelUpdateHandler$1, run()V > Context: Everywhere
   start: Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
      Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

--- found anomaly call chain ----, num: 82
Node: < Application, Lorg/eclipse/cdt/dsf/ui/viewmodel/update/MultiLevelUpdateHandler$1, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/ui/viewmodel/update/MultiLevelUpdateHandler, processNext()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Label, setText(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

      Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

--- found anomaly call chain ----, num: 83
Node: < Application, Lorg/eclipse/cdt/dsf/ui/viewmodel/update/MultiLevelUpdateHandler$1, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/ui/viewmodel/update/MultiLevelUpdateHandler, processNext()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/Dialog, shortenText(Ljava/lang/String;Lorg/eclipse/swt/widgets/Control;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, internal_new_GC(Lorg/eclipse/swt/graphics/GCData;)J > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, getSystemFont()Lorg/eclipse/swt/graphics/Font; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/ui/viewmodel/update/MultiLevelUpdateHandler$1, toString()Ljava/lang/String; > Context: Everywhere
   start: Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
      Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

--- found anomaly call chain ----, num: 84
Node: < Application, Lorg/eclipse/cdt/dsf/ui/viewmodel/update/MultiLevelUpdateHandler$1, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/DataRequestMonitor, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/runtime/Status, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, append(Ljava/lang/Object;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Label, setText(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

      Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

--- found anomaly call chain ----, num: 85
Node: < Application, Lorg/eclipse/cdt/dsf/ui/viewmodel/update/MultiLevelUpdateHandler$1, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/DataRequestMonitor, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/runtime/Status, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, append(Ljava/lang/Object;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/Dialog, shortenText(Ljava/lang/String;Lorg/eclipse/swt/widgets/Control;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, internal_new_GC(Lorg/eclipse/swt/graphics/GCData;)J > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, getSystemFont()Lorg/eclipse/swt/graphics/Font; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/TCPSettingsBlock$1, dialogFieldChanged(Lorg/eclipse/cdt/debug/internal/ui/dialogfields/DialogField;)V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/launch/AbstractThreadVMNode$2, handleCompleted()V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/AbstractDebugVMAdapter$3, run()V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/register/RegisterGroupVMNode$1, handleCompleted()V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/GdbCoreDebuggerPage$3, modifyText(Lorg/eclipse/swt/events/ModifyEvent;)V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/variable/VariableVMNode$10, isEnabled(Lorg/eclipse/core/runtime/IStatus;Ljava/util/Map;)Z > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/modules/detail/ModuleDetailPane$2, selectionChanged(Lorg/eclipse/jface/viewers/SelectionChangedEvent;)V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/launch/AbstractLaunchVMProvider$2, run()V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/ui/viewmodel/DefaultVMModelProxyStrategy$1, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/ui/viewmodel/DefaultVMModelProxyStrategy$1, run()V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/launch/StackFramesVMNode$9, handleCompleted()V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/viewmodel/launch/LaunchVMProvider$1, run()V > Context: Everywhere
   start: Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
      Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

--- found anomaly call chain ----, num: 86
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/viewmodel/launch/LaunchVMProvider$1, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/service/DsfServicesTracker, <init>(Lorg/osgi/framework/BundleContext;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AssertionError, <init>(Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Label, setText(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

      Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

--- found anomaly call chain ----, num: 87
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/viewmodel/launch/LaunchVMProvider$1, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/service/DsfServicesTracker, <init>(Lorg/osgi/framework/BundleContext;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AssertionError, <init>(Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/Dialog, shortenText(Ljava/lang/String;Lorg/eclipse/swt/widgets/Control;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, internal_new_GC(Lorg/eclipse/swt/graphics/GCData;)J > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, getSystemFont()Lorg/eclipse/swt/graphics/Font; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/AbstractCDebuggerTab$1, widgetSelected(Lorg/eclipse/swt/events/SelectionEvent;)V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/AbstractCDebuggerTab$1, widgetDefaultSelected(Lorg/eclipse/swt/events/SelectionEvent;)V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/ui/viewmodel/DefaultVMModelProxyStrategy$2, run()V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/GDBSolibBlock$1, widgetSelected(Lorg/eclipse/swt/events/SelectionEvent;)V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyPart$15$2, run()V > Context: Everywhere
   start: Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
      Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

--- found anomaly call chain ----, num: 88
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyPart$15$2, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ErrorDialog, openError(Lorg/eclipse/swt/widgets/Shell;Ljava/lang/String;Ljava/lang/String;Lorg/eclipse/core/runtime/IStatus;)I > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ErrorDialog, openError(Lorg/eclipse/swt/widgets/Shell;Ljava/lang/String;Ljava/lang/String;Lorg/eclipse/core/runtime/IStatus;I)I > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ErrorDialog, <init>(Lorg/eclipse/swt/widgets/Shell;Ljava/lang/String;Ljava/lang/String;Lorg/eclipse/core/runtime/IStatus;I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Label, setText(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

      Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

--- found anomaly call chain ----, num: 89
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyPart$15$2, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ErrorDialog, openError(Lorg/eclipse/swt/widgets/Shell;Ljava/lang/String;Ljava/lang/String;Lorg/eclipse/core/runtime/IStatus;)I > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ErrorDialog, openError(Lorg/eclipse/swt/widgets/Shell;Ljava/lang/String;Ljava/lang/String;Lorg/eclipse/core/runtime/IStatus;I)I > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ErrorDialog, <init>(Lorg/eclipse/swt/widgets/Shell;Ljava/lang/String;Ljava/lang/String;Lorg/eclipse/core/runtime/IStatus;I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/Dialog, shortenText(Ljava/lang/String;Lorg/eclipse/swt/widgets/Control;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, internal_new_GC(Lorg/eclipse/swt/graphics/GCData;)J > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, getSystemFont()Lorg/eclipse/swt/graphics/Font; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/ui/concurrent/DisplayDsfExecutor$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/actions/DsfResumeCommand$2, doExecute()V > Context: Everywhere
   start: Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
      Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

--- found anomaly call chain ----, num: 90
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/actions/DsfResumeCommand$2, doExecute()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor, <init>(Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/DsfExecutable, <init>()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Thread, getStackTrace()[Ljava/lang/StackTraceElement; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/SecurityManager, checkPermission(Ljava/security/Permission;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/security/AccessController, checkPermission(Ljava/security/Permission;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Label, setText(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

      Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

--- found anomaly call chain ----, num: 91
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/actions/DsfResumeCommand$2, doExecute()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor, <init>(Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/DsfExecutable, <init>()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Thread, getStackTrace()[Ljava/lang/StackTraceElement; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/SecurityManager, checkPermission(Ljava/security/Permission;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/security/AccessController, checkPermission(Ljava/security/Permission;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/Dialog, shortenText(Ljava/lang/String;Lorg/eclipse/swt/widgets/Control;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, internal_new_GC(Lorg/eclipse/swt/graphics/GCData;)J > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, getSystemFont()Lorg/eclipse/swt/graphics/Font; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/text/REDTextStore$RunSpec, isValid()Z > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/CMainTab$4, widgetSelected(Lorg/eclipse/swt/events/SelectionEvent;)V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/expression/ExpressionsChangedUpdateTester, <init>(Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/expression/ExpressionsChangedEvent;)V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/expression/ExpressionsChangedUpdateTester, getUpdateFlags(Ljava/lang/Object;Lorg/eclipse/jface/viewers/TreePath;)I > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/expression/ExpressionsChangedUpdateTester, includes(Lorg/eclipse/cdt/dsf/ui/viewmodel/update/IElementUpdateTester;)Z > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/expression/ExpressionsChangedUpdateTester, toString()Ljava/lang/String; > Context: Everywhere
   start: Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
      Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

--- found anomaly call chain ----, num: 92
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/expression/ExpressionsChangedUpdateTester, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Label, setText(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

      Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

--- found anomaly call chain ----, num: 93
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/expression/ExpressionsChangedUpdateTester, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/Dialog, shortenText(Ljava/lang/String;Lorg/eclipse/swt/widgets/Control;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, internal_new_GC(Lorg/eclipse/swt/graphics/GCData;)J > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, getSystemFont()Lorg/eclipse/swt/graphics/Font; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/CDebuggerTab$3, modifyText(Lorg/eclipse/swt/events/ModifyEvent;)V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyPart$22, run()V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/register/RegisterVMNode$4, isEnabled(Lorg/eclipse/core/runtime/IStatus;Ljava/util/Map;)Z > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/sourcelookup/InstructionPointerManager, <init>()V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/sourcelookup/InstructionPointerManager, <init>(Lorg/eclipse/cdt/dsf/debug/ui/sourcelookup/IInstructionPointerPresentation;)V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/sourcelookup/InstructionPointerManager, removeAnnotations(Lorg/eclipse/cdt/dsf/debug/service/IRunControl$IExecutionDMContext;)V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/sourcelookup/InstructionPointerManager, removeTopFrameAnnotations(Lorg/eclipse/cdt/dsf/debug/service/IRunControl$IExecutionDMContext;)V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/sourcelookup/InstructionPointerManager, removeAllAnnotations()V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/CDebuggerTab$1, compare(Lorg/eclipse/cdt/debug/core/ICDebugConfiguration;Lorg/eclipse/cdt/debug/core/ICDebugConfiguration;)I > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/CDebuggerTab$1, compare(Ljava/lang/Object;Ljava/lang/Object;)I > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyPart$ActionToggleBreakpointEnablement, <init>(Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyPart;)V > Context: Everywhere
   start: Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
      Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

--- found anomaly call chain ----, num: 94
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyPart$ActionToggleBreakpointEnablement, <init>(Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyPart;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/action/Action, setText(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/action/LegacyActionTools, convertLocalizedAccelerator(Ljava/lang/String;)I > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/action/LegacyActionTools, findLocalizedModifier(Ljava/lang/String;)I > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, toUpperCase()Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/util/Locale, getDefault()Ljava/util/Locale; > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/security/AccessController, doPrivileged(Ljava/security/PrivilegedAction;)Ljava/lang/Object; > Context: Everywhere
 -> Node: < Primordial, Ljava/security/AccessControlContext$2, run()Ljava/lang/Object; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Label, setText(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

      Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

--- found anomaly call chain ----, num: 95
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyPart$ActionToggleBreakpointEnablement, <init>(Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyPart;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/action/Action, setText(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/action/LegacyActionTools, convertLocalizedAccelerator(Ljava/lang/String;)I > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/action/LegacyActionTools, findLocalizedModifier(Ljava/lang/String;)I > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, toUpperCase()Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/util/Locale, getDefault()Ljava/util/Locale; > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/security/AccessController, doPrivileged(Ljava/security/PrivilegedAction;)Ljava/lang/Object; > Context: Everywhere
 -> Node: < Primordial, Ljava/security/AccessControlContext$2, run()Ljava/lang/Object; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/Dialog, shortenText(Ljava/lang/String;Lorg/eclipse/swt/widgets/Control;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, internal_new_GC(Lorg/eclipse/swt/graphics/GCData;)J > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, getSystemFont()Lorg/eclipse/swt/graphics/Font; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyPart$ActionToggleBreakpointEnablement, run()V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyPart$ActionToggleBreakpointEnablement, update()V > Context: Everywhere
   start: Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
      Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

--- found anomaly call chain ----, num: 96
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyPart$ActionToggleBreakpointEnablement, update()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/action/Action, setText(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/action/LegacyActionTools, convertLocalizedAccelerator(Ljava/lang/String;)I > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/action/LegacyActionTools, findLocalizedModifier(Ljava/lang/String;)I > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, toUpperCase()Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/util/Locale, getDefault()Ljava/util/Locale; > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/security/AccessController, doPrivileged(Ljava/security/PrivilegedAction;)Ljava/lang/Object; > Context: Everywhere
 -> Node: < Primordial, Ljava/security/AccessControlContext$2, run()Ljava/lang/Object; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Label, setText(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

      Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

--- found anomaly call chain ----, num: 97
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyPart$ActionToggleBreakpointEnablement, update()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/action/Action, setText(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/action/LegacyActionTools, convertLocalizedAccelerator(Ljava/lang/String;)I > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/action/LegacyActionTools, findLocalizedModifier(Ljava/lang/String;)I > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, toUpperCase()Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/util/Locale, getDefault()Ljava/util/Locale; > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/security/AccessController, doPrivileged(Ljava/security/PrivilegedAction;)Ljava/lang/Object; > Context: Everywhere
 -> Node: < Primordial, Ljava/security/AccessControlContext$2, run()Ljava/lang/Object; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/Dialog, shortenText(Ljava/lang/String;Lorg/eclipse/swt/widgets/Control;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, internal_new_GC(Lorg/eclipse/swt/graphics/GCData;)J > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, getSystemFont()Lorg/eclipse/swt/graphics/Font; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/ui/viewmodel/update/ManualUpdatePolicy$UserEditEventUpdateTester, <init>(Ljava/util/Set;)V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/ui/viewmodel/update/ManualUpdatePolicy$UserEditEventUpdateTester, getUpdateFlags(Ljava/lang/Object;Lorg/eclipse/jface/viewers/TreePath;)I > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/ui/viewmodel/update/ManualUpdatePolicy$UserEditEventUpdateTester, includes(Lorg/eclipse/cdt/dsf/ui/viewmodel/update/IElementUpdateTester;)Z > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/ui/viewmodel/update/ManualUpdatePolicy$UserEditEventUpdateTester, toString()Ljava/lang/String; > Context: Everywhere
   start: Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
      Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

--- found anomaly call chain ----, num: 98
Node: < Application, Lorg/eclipse/cdt/dsf/ui/viewmodel/update/ManualUpdatePolicy$UserEditEventUpdateTester, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Label, setText(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

      Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

--- found anomaly call chain ----, num: 99
Node: < Application, Lorg/eclipse/cdt/dsf/ui/viewmodel/update/ManualUpdatePolicy$UserEditEventUpdateTester, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/Dialog, shortenText(Ljava/lang/String;Lorg/eclipse/swt/widgets/Control;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, internal_new_GC(Lorg/eclipse/swt/graphics/GCData;)J > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, getSystemFont()Lorg/eclipse/swt/graphics/Font; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyPart$19, run()V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/GdbDebuggerPage$6, widgetSelected(Lorg/eclipse/swt/events/SelectionEvent;)V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/EditionFinderJob, <init>(Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/model/SourceFileInfo;Ljava/math/BigInteger;Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyPart;)V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/variable/VariableVMNode$19, handleCompleted()V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/actions/BreakpointPropertiesRulerAction$1, addSelectionChangedListener(Lorg/eclipse/jface/viewers/ISelectionChangedListener;)V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/actions/BreakpointPropertiesRulerAction$1, getSelection()Lorg/eclipse/jface/viewers/ISelection; > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/actions/BreakpointPropertiesRulerAction$1, removeSelectionChangedListener(Lorg/eclipse/jface/viewers/ISelectionChangedListener;)V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/actions/BreakpointPropertiesRulerAction$1, setSelection(Lorg/eclipse/jface/viewers/ISelection;)V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyPart$20$1, run()V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$AddDirectoryDialog$1, modifyText(Lorg/eclipse/swt/events/ModifyEvent;)V > Context: Everywhere
   start: Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
      Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

--- found anomaly call chain ----, num: 100
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$AddDirectoryDialog$1, modifyText(Lorg/eclipse/swt/events/ModifyEvent;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$AddDirectoryDialog, updateOKButton()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Control, setEnabled(Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, error(I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/SWT, error(I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/SWT, error(ILjava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/SWT, error(ILjava/lang/Throwable;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Label, setText(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

      Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

--- found anomaly call chain ----, num: 101
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$AddDirectoryDialog$1, modifyText(Lorg/eclipse/swt/events/ModifyEvent;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$AddDirectoryDialog, updateOKButton()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Control, setEnabled(Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, error(I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/SWT, error(I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/SWT, error(ILjava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/SWT, error(ILjava/lang/Throwable;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/Dialog, shortenText(Ljava/lang/String;Lorg/eclipse/swt/widgets/Control;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, internal_new_GC(Lorg/eclipse/swt/graphics/GCData;)J > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, getSystemFont()Lorg/eclipse/swt/graphics/Font; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyPart$ActionToggleSource, <init>(Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyPart;)V > Context: Everywhere
   start: Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
      Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

--- found anomaly call chain ----, num: 102
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyPart$ActionToggleSource, <init>(Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyPart;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/action/Action, setText(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/action/LegacyActionTools, convertLocalizedAccelerator(Ljava/lang/String;)I > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/action/LegacyActionTools, findLocalizedModifier(Ljava/lang/String;)I > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, toUpperCase()Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/util/Locale, getDefault()Ljava/util/Locale; > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/security/AccessController, doPrivileged(Ljava/security/PrivilegedAction;)Ljava/lang/Object; > Context: Everywhere
 -> Node: < Primordial, Ljava/security/AccessControlContext$2, run()Ljava/lang/Object; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Label, setText(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

      Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

--- found anomaly call chain ----, num: 103
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyPart$ActionToggleSource, <init>(Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyPart;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/action/Action, setText(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/action/LegacyActionTools, convertLocalizedAccelerator(Ljava/lang/String;)I > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/action/LegacyActionTools, findLocalizedModifier(Ljava/lang/String;)I > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, toUpperCase()Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/util/Locale, getDefault()Ljava/util/Locale; > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/security/AccessController, doPrivileged(Ljava/security/PrivilegedAction;)Ljava/lang/Object; > Context: Everywhere
 -> Node: < Primordial, Ljava/security/AccessControlContext$2, run()Ljava/lang/Object; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/Dialog, shortenText(Ljava/lang/String;Lorg/eclipse/swt/widgets/Control;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, internal_new_GC(Lorg/eclipse/swt/graphics/GCData;)J > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, getSystemFont()Lorg/eclipse/swt/graphics/Font; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyPart$ActionToggleSource, run()V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyPart$ActionToggleSource, update()V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/launch/AbstractContainerVMNode$2, run()V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/launch/StackFramesVMNode$7, handleCompleted()V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/launch/StackFramesVMNode$15, run()V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/numberformat/NumberFormatsContribution$1, fill(Lorg/eclipse/swt/widgets/Menu;I)V > Context: Everywhere
   start: Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
      Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

--- found anomaly call chain ----, num: 104
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/numberformat/NumberFormatsContribution$1, fill(Lorg/eclipse/swt/widgets/Menu;I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/MenuItem, setEnabled(Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, error(I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/SWT, error(I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/SWT, error(ILjava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/SWT, error(ILjava/lang/Throwable;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Label, setText(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

      Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

--- found anomaly call chain ----, num: 105
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/numberformat/NumberFormatsContribution$1, fill(Lorg/eclipse/swt/widgets/Menu;I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/MenuItem, setEnabled(Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, error(I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/SWT, error(I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/SWT, error(ILjava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/SWT, error(ILjava/lang/Throwable;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/Dialog, shortenText(Ljava/lang/String;Lorg/eclipse/swt/widgets/Control;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, internal_new_GC(Lorg/eclipse/swt/graphics/GCData;)J > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, getSystemFont()Lorg/eclipse/swt/graphics/Font; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/numberformat/NumberFormatsContribution$1, isEnabled()Z > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyPart$21, run()V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/ui/viewmodel/datamodel/AbstractDMVMNode$1, run()V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/viewmodel/numberformat/detail/NumberFormatDetailPane$4, menuAboutToShow(Lorg/eclipse/jface/action/IMenuManager;)V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/ui/concurrent/DisplayDsfExecutor$2, call()Ljava/lang/Object; > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/register/RegisterVMProvider$3, run()V > Context: Everywhere
   start: Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
      Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

--- found anomaly call chain ----, num: 106
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/register/RegisterVMProvider$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/service/DsfServicesTracker, <init>(Lorg/osgi/framework/BundleContext;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AssertionError, <init>(Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Label, setText(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

      Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

--- found anomaly call chain ----, num: 107
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/register/RegisterVMProvider$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/service/DsfServicesTracker, <init>(Lorg/osgi/framework/BundleContext;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AssertionError, <init>(Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/Dialog, shortenText(Ljava/lang/String;Lorg/eclipse/swt/widgets/Control;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, internal_new_GC(Lorg/eclipse/swt/graphics/GCData;)J > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, getSystemFont()Lorg/eclipse/swt/graphics/Font; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$3, getChildren(Ljava/lang/Object;)[Ljava/lang/Object; > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$3, getParent(Ljava/lang/Object;)Ljava/lang/Object; > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$3, hasChildren(Ljava/lang/Object;)Z > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$3, getElements(Ljava/lang/Object;)[Ljava/lang/Object; > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$3, dispose()V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$3, inputChanged(Lorg/eclipse/jface/viewers/Viewer;Ljava/lang/Object;Ljava/lang/Object;)V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/sourcelookup/DsfSourceDisplayAdapter$ClearingJob$1, run()V > Context: Everywhere
   start: Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
      Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

--- found anomaly call chain ----, num: 108
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/sourcelookup/DsfSourceDisplayAdapter$ClearingJob$1, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/sourcelookup/DsfSourceDisplayAdapter, access$10(Lorg/eclipse/cdt/dsf/debug/ui/sourcelookup/DsfSourceDisplayAdapter;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/sourcelookup/DsfSourceDisplayAdapter, serviceDisplayAndClearingJobs()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/runtime/jobs/Job, schedule()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/InternalJob, schedule(J)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/JobManager, schedule(Lorg/eclipse/core/internal/jobs/InternalJob;JZ)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Label, setText(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

      Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

--- found anomaly call chain ----, num: 109
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/sourcelookup/DsfSourceDisplayAdapter$ClearingJob$1, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/sourcelookup/DsfSourceDisplayAdapter, access$10(Lorg/eclipse/cdt/dsf/debug/ui/sourcelookup/DsfSourceDisplayAdapter;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/sourcelookup/DsfSourceDisplayAdapter, serviceDisplayAndClearingJobs()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/runtime/jobs/Job, schedule()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/InternalJob, schedule(J)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/JobManager, schedule(Lorg/eclipse/core/internal/jobs/InternalJob;JZ)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/Dialog, shortenText(Ljava/lang/String;Lorg/eclipse/swt/widgets/Control;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, internal_new_GC(Lorg/eclipse/swt/graphics/GCData;)J > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, getSystemFont()Lorg/eclipse/swt/graphics/Font; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/actions/GdbDisconnectCommand$1, doExecute()V > Context: Everywhere
   start: Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
      Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

--- found anomaly call chain ----, num: 110
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/actions/GdbDisconnectCommand$1, doExecute()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/actions/GdbDisconnectCommand$1$1, <init>(Lorg/eclipse/cdt/dsf/gdb/internal/ui/actions/GdbDisconnectCommand$1;Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;Lorg/eclipse/debug/core/commands/IEnabledStateRequest;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/DataRequestMonitor, <init>(Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor, <init>(Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/DsfExecutable, <init>()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Thread, getStackTrace()[Ljava/lang/StackTraceElement; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/SecurityManager, checkPermission(Ljava/security/Permission;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/security/AccessController, checkPermission(Ljava/security/Permission;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Label, setText(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

      Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

--- found anomaly call chain ----, num: 111
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/actions/GdbDisconnectCommand$1, doExecute()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/actions/GdbDisconnectCommand$1$1, <init>(Lorg/eclipse/cdt/dsf/gdb/internal/ui/actions/GdbDisconnectCommand$1;Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;Lorg/eclipse/debug/core/commands/IEnabledStateRequest;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/DataRequestMonitor, <init>(Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor, <init>(Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/DsfExecutable, <init>()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Thread, getStackTrace()[Ljava/lang/StackTraceElement; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/SecurityManager, checkPermission(Ljava/security/Permission;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/security/AccessController, checkPermission(Ljava/security/Permission;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/Dialog, shortenText(Ljava/lang/String;Lorg/eclipse/swt/widgets/Control;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, internal_new_GC(Lorg/eclipse/swt/graphics/GCData;)J > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, getSystemFont()Lorg/eclipse/swt/graphics/Font; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/ui/viewmodel/datamodel/AbstractDMVMAdapter$1, run()V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/register/RegisterVMProvider$ViewInputElement, <init>(Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/register/RegisterVMProvider;Lorg/eclipse/cdt/dsf/ui/viewmodel/IVMNode;Lorg/eclipse/cdt/dsf/datamodel/IDMContext;)V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/register/RegisterVMProvider$ViewInputElement, getDMContext()Lorg/eclipse/cdt/dsf/datamodel/IDMContext; > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/register/RegisterVMProvider$ViewInputElement, getAdapter(Ljava/lang/Class;)Ljava/lang/Object; > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/register/RegisterVMProvider$ViewInputElement, equals(Ljava/lang/Object;)Z > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/register/RegisterVMProvider$ViewInputElement, hashCode()I > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/viewmodel/launch/ContainerVMNode$1, handleCompleted()V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/variable/VariableVMNode$12, isEnabled(Lorg/eclipse/core/runtime/IStatus;Ljava/util/Map;)Z > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyPart$16, run()V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/register/RegisterVMNode$12, run()V > Context: Everywhere
   start: Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
      Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

--- found anomaly call chain ----, num: 112
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/register/RegisterVMNode$12, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/register/RegisterVMNode$12$1, <init>(Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/register/RegisterVMNode$12;Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;Lorg/eclipse/debug/internal/ui/viewers/model/provisional/IElementCompareRequest;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/DataRequestMonitor, <init>(Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor, <init>(Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/DsfExecutable, <init>()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Thread, getStackTrace()[Ljava/lang/StackTraceElement; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/SecurityManager, checkPermission(Ljava/security/Permission;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/security/AccessController, checkPermission(Ljava/security/Permission;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Label, setText(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

      Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

--- found anomaly call chain ----, num: 113
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/register/RegisterVMNode$12, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/register/RegisterVMNode$12$1, <init>(Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/register/RegisterVMNode$12;Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;Lorg/eclipse/debug/internal/ui/viewers/model/provisional/IElementCompareRequest;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/DataRequestMonitor, <init>(Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor, <init>(Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/DsfExecutable, <init>()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Thread, getStackTrace()[Ljava/lang/StackTraceElement; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/SecurityManager, checkPermission(Ljava/security/Permission;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/security/AccessController, checkPermission(Ljava/security/Permission;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/Dialog, shortenText(Ljava/lang/String;Lorg/eclipse/swt/widgets/Control;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, internal_new_GC(Lorg/eclipse/swt/graphics/GCData;)J > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, getSystemFont()Lorg/eclipse/swt/graphics/Font; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/sourcelookup/DsfSourceDisplayAdapter$4, run()V > Context: Everywhere
   start: Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
      Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

--- found anomaly call chain ----, num: 114
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/sourcelookup/DsfSourceDisplayAdapter$4, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/sourcelookup/DsfSourceDisplayAdapter, access$9(Lorg/eclipse/cdt/dsf/debug/ui/sourcelookup/DsfSourceDisplayAdapter;Lorg/eclipse/cdt/dsf/datamodel/IDMContext;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/sourcelookup/DsfSourceDisplayAdapter, doneStepping(Lorg/eclipse/cdt/dsf/datamodel/IDMContext;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/sourcelookup/DsfSourceDisplayAdapter$3, <init>(Lorg/eclipse/cdt/dsf/debug/ui/sourcelookup/DsfSourceDisplayAdapter;Lorg/eclipse/cdt/dsf/debug/service/IRunControl$IExecutionDMContext;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/DsfRunnable, <init>()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/DsfExecutable, <init>()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Thread, getStackTrace()[Ljava/lang/StackTraceElement; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/SecurityManager, checkPermission(Ljava/security/Permission;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/security/AccessController, checkPermission(Ljava/security/Permission;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Label, setText(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

      Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

--- found anomaly call chain ----, num: 115
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/sourcelookup/DsfSourceDisplayAdapter$4, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/sourcelookup/DsfSourceDisplayAdapter, access$9(Lorg/eclipse/cdt/dsf/debug/ui/sourcelookup/DsfSourceDisplayAdapter;Lorg/eclipse/cdt/dsf/datamodel/IDMContext;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/sourcelookup/DsfSourceDisplayAdapter, doneStepping(Lorg/eclipse/cdt/dsf/datamodel/IDMContext;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/sourcelookup/DsfSourceDisplayAdapter$3, <init>(Lorg/eclipse/cdt/dsf/debug/ui/sourcelookup/DsfSourceDisplayAdapter;Lorg/eclipse/cdt/dsf/debug/service/IRunControl$IExecutionDMContext;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/DsfRunnable, <init>()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/DsfExecutable, <init>()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Thread, getStackTrace()[Ljava/lang/StackTraceElement; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/SecurityManager, checkPermission(Ljava/security/Permission;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/security/AccessController, checkPermission(Ljava/security/Permission;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/Dialog, shortenText(Ljava/lang/String;Lorg/eclipse/swt/widgets/Control;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, internal_new_GC(Lorg/eclipse/swt/graphics/GCData;)J > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, getSystemFont()Lorg/eclipse/swt/graphics/Font; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/presentation/SourceTagDamagerRepairer$1, compare(Ljava/lang/Object;Ljava/lang/Object;)I > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/CDebuggerTab$4, getName(Lorg/eclipse/swt/accessibility/AccessibleEvent;)V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/register/RegisterBitFieldVMNode$8, isEnabled(Lorg/eclipse/core/runtime/IStatus;Ljava/util/Map;)Z > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyPart$ActionToggleSymbols, <init>(Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyPart;)V > Context: Everywhere
   start: Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
      Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

--- found anomaly call chain ----, num: 116
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyPart$ActionToggleSymbols, <init>(Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyPart;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/action/Action, setText(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/action/LegacyActionTools, convertLocalizedAccelerator(Ljava/lang/String;)I > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/action/LegacyActionTools, findLocalizedModifier(Ljava/lang/String;)I > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, toUpperCase()Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/util/Locale, getDefault()Ljava/util/Locale; > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/security/AccessController, doPrivileged(Ljava/security/PrivilegedAction;)Ljava/lang/Object; > Context: Everywhere
 -> Node: < Primordial, Ljava/security/AccessControlContext$2, run()Ljava/lang/Object; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Label, setText(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

      Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

--- found anomaly call chain ----, num: 117
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyPart$ActionToggleSymbols, <init>(Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyPart;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/action/Action, setText(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/action/LegacyActionTools, convertLocalizedAccelerator(Ljava/lang/String;)I > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/action/LegacyActionTools, findLocalizedModifier(Ljava/lang/String;)I > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, toUpperCase()Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/util/Locale, getDefault()Ljava/util/Locale; > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/security/AccessController, doPrivileged(Ljava/security/PrivilegedAction;)Ljava/lang/Object; > Context: Everywhere
 -> Node: < Primordial, Ljava/security/AccessControlContext$2, run()Ljava/lang/Object; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/Dialog, shortenText(Ljava/lang/String;Lorg/eclipse/swt/widgets/Control;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, internal_new_GC(Lorg/eclipse/swt/graphics/GCData;)J > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, getSystemFont()Lorg/eclipse/swt/graphics/Font; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyPart$ActionToggleSymbols, run()V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyPart$ActionToggleSymbols, update()V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/modules/detail/ModuleDetailPane$3, focusGained(Lorg/eclipse/swt/events/FocusEvent;)V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/modules/detail/ModuleDetailPane$3, focusLost(Lorg/eclipse/swt/events/FocusEvent;)V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/GdbCoreDebuggerPage$4, widgetSelected(Lorg/eclipse/swt/events/SelectionEvent;)V > Context: Everywhere
   start: Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
      Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

--- found anomaly call chain ----, num: 118
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/GdbCoreDebuggerPage$4, widgetSelected(Lorg/eclipse/swt/events/SelectionEvent;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/GdbCoreDebuggerPage$4, handleGDBInitButtonSelected()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/FileDialog, open()Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Label, setText(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

      Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

--- found anomaly call chain ----, num: 119
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/GdbCoreDebuggerPage$4, widgetSelected(Lorg/eclipse/swt/events/SelectionEvent;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/GdbCoreDebuggerPage$4, handleGDBInitButtonSelected()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/FileDialog, open()Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/Dialog, shortenText(Ljava/lang/String;Lorg/eclipse/swt/widgets/Control;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, internal_new_GC(Lorg/eclipse/swt/graphics/GCData;)J > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, getSystemFont()Lorg/eclipse/swt/graphics/Font; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/launch/StackFramesVMNode$8, handleCompleted()V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/CArgumentsTab$3, widgetSelected(Lorg/eclipse/swt/events/SelectionEvent;)V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/ProcessPrompter$2, getText(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/ProcessPrompter$2, getImage(Ljava/lang/Object;)Lorg/eclipse/swt/graphics/Image; > Context: Everywhere
   start: Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
      Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

--- found anomaly call chain ----, num: 120
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/ProcessPrompter$2, getImage(Ljava/lang/Object;)Lorg/eclipse/swt/graphics/Image; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/LaunchImages, get(Ljava/lang/String;)Lorg/eclipse/swt/graphics/Image; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/ImageRegistry, get(Ljava/lang/String;)Lorg/eclipse/swt/graphics/Image; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/ResourceManager, createImageWithDefault(Lorg/eclipse/jface/resource/ImageDescriptor;)Lorg/eclipse/swt/graphics/Image; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, append(Ljava/lang/Object;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Label, setText(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

      Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

--- found anomaly call chain ----, num: 121
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/ProcessPrompter$2, getImage(Ljava/lang/Object;)Lorg/eclipse/swt/graphics/Image; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/LaunchImages, get(Ljava/lang/String;)Lorg/eclipse/swt/graphics/Image; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/ImageRegistry, get(Ljava/lang/String;)Lorg/eclipse/swt/graphics/Image; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/ResourceManager, createImageWithDefault(Lorg/eclipse/jface/resource/ImageDescriptor;)Lorg/eclipse/swt/graphics/Image; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, append(Ljava/lang/Object;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/Dialog, shortenText(Ljava/lang/String;Lorg/eclipse/swt/widgets/Control;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, internal_new_GC(Lorg/eclipse/swt/graphics/GCData;)J > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, getSystemFont()Lorg/eclipse/swt/graphics/Font; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyPart$10, mouseDoubleClick(Lorg/eclipse/swt/events/MouseEvent;)V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/variable/VariableVMProvider$1, propertyChange(Lorg/eclipse/jface/util/PropertyChangeEvent;)V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/viewmodel/actions/UpdateScopesContribution$SelectUpdateScopeAction, run()V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/sourcelookup/DsfSourceDisplayAdapter$1, run()V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/viewmodel/detailsupport/DetailPaneMaxLengthDialog$2, modifyText(Lorg/eclipse/swt/events/ModifyEvent;)V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyPart$11$1$1, run()V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/actions/GdbReverseToggleCommand$2$1, handleSuccess()V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/launch/StackFramesVMNode$6, isEnabled(Lorg/eclipse/core/runtime/IStatus;Ljava/util/Map;)Z > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/register/RegisterGroupVMNode$6, run()V > Context: Everywhere
   start: Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
      Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

--- found anomaly call chain ----, num: 122
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/register/RegisterGroupVMNode$6, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/register/RegisterGroupVMNode$6$1, <init>(Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/register/RegisterGroupVMNode$6;Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;Lorg/eclipse/debug/internal/ui/viewers/model/provisional/IElementMementoRequest;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/DataRequestMonitor, <init>(Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor, <init>(Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/DsfExecutable, <init>()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Thread, getStackTrace()[Ljava/lang/StackTraceElement; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/SecurityManager, checkPermission(Ljava/security/Permission;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/security/AccessController, checkPermission(Ljava/security/Permission;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Label, setText(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

      Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

--- found anomaly call chain ----, num: 123
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/register/RegisterGroupVMNode$6, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/register/RegisterGroupVMNode$6$1, <init>(Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/register/RegisterGroupVMNode$6;Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;Lorg/eclipse/debug/internal/ui/viewers/model/provisional/IElementMementoRequest;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/DataRequestMonitor, <init>(Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor, <init>(Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/DsfExecutable, <init>()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Thread, getStackTrace()[Ljava/lang/StackTraceElement; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/SecurityManager, checkPermission(Ljava/security/Permission;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/security/AccessController, checkPermission(Ljava/security/Permission;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/Dialog, shortenText(Ljava/lang/String;Lorg/eclipse/swt/widgets/Control;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, internal_new_GC(Lorg/eclipse/swt/graphics/GCData;)J > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, getSystemFont()Lorg/eclipse/swt/graphics/Font; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/actions/DsfTerminateCommand$1, run()V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/ui/viewmodel/DefaultVMModelProxyStrategy$4, run()V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/expression/ExpressionsChangedEvent$Type, values()[Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/expression/ExpressionsChangedEvent$Type; > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/expression/ExpressionsChangedEvent$Type, valueOf(Ljava/lang/String;)Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/expression/ExpressionsChangedEvent$Type; > Context: Everywhere
   start: Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
      Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

--- found anomaly call chain ----, num: 124
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/expression/ExpressionsChangedEvent$Type, valueOf(Ljava/lang/String;)Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/expression/ExpressionsChangedEvent$Type; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Enum, valueOf(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Label, setText(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

      Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

--- found anomaly call chain ----, num: 125
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/expression/ExpressionsChangedEvent$Type, valueOf(Ljava/lang/String;)Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/expression/ExpressionsChangedEvent$Type; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Enum, valueOf(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/Dialog, shortenText(Ljava/lang/String;Lorg/eclipse/swt/widgets/Control;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, internal_new_GC(Lorg/eclipse/swt/graphics/GCData;)J > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, getSystemFont()Lorg/eclipse/swt/graphics/Font; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/launch/DelayedStackRefreshUpdatePolicy$DelayedStackRefreshUpdateTester, getUpdateFlags(Ljava/lang/Object;Lorg/eclipse/jface/viewers/TreePath;)I > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/launch/DelayedStackRefreshUpdatePolicy$DelayedStackRefreshUpdateTester, includes(Lorg/eclipse/cdt/dsf/ui/viewmodel/update/IElementUpdateTester;)Z > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/launch/DelayedStackRefreshUpdatePolicy$DelayedStackRefreshUpdateTester, toString()Ljava/lang/String; > Context: Everywhere
   start: Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
      Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

--- found anomaly call chain ----, num: 126
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/launch/DelayedStackRefreshUpdatePolicy$DelayedStackRefreshUpdateTester, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Label, setText(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

      Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

--- found anomaly call chain ----, num: 127
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/launch/DelayedStackRefreshUpdatePolicy$DelayedStackRefreshUpdateTester, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/Dialog, shortenText(Ljava/lang/String;Lorg/eclipse/swt/widgets/Control;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, internal_new_GC(Lorg/eclipse/swt/graphics/GCData;)J > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, getSystemFont()Lorg/eclipse/swt/graphics/Font; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/actions/DsfResumeCommand$1, doExecute()V > Context: Everywhere
   start: Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
      Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

--- found anomaly call chain ----, num: 128
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/actions/DsfResumeCommand$1, doExecute()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/actions/DsfResumeCommand$1$1, <init>(Lorg/eclipse/cdt/dsf/debug/ui/actions/DsfResumeCommand$1;Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;Lorg/eclipse/debug/core/commands/IEnabledStateRequest;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/DataRequestMonitor, <init>(Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor, <init>(Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/DsfExecutable, <init>()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Thread, getStackTrace()[Ljava/lang/StackTraceElement; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/SecurityManager, checkPermission(Ljava/security/Permission;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/security/AccessController, checkPermission(Ljava/security/Permission;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Label, setText(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

      Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

--- found anomaly call chain ----, num: 129
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/actions/DsfResumeCommand$1, doExecute()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/actions/DsfResumeCommand$1$1, <init>(Lorg/eclipse/cdt/dsf/debug/ui/actions/DsfResumeCommand$1;Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;Lorg/eclipse/debug/core/commands/IEnabledStateRequest;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/DataRequestMonitor, <init>(Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor, <init>(Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/DsfExecutable, <init>()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Thread, getStackTrace()[Ljava/lang/StackTraceElement; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/SecurityManager, checkPermission(Ljava/security/Permission;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/security/AccessController, checkPermission(Ljava/security/Permission;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/Dialog, shortenText(Ljava/lang/String;Lorg/eclipse/swt/widgets/Control;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, internal_new_GC(Lorg/eclipse/swt/graphics/GCData;)J > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, getSystemFont()Lorg/eclipse/swt/graphics/Font; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/variable/VariableVMNode$18, run()V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/launch/AbstractContainerVMNode$5$1, run()V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/ui/viewmodel/update/MultiLevelUpdateHandler, done()V > Context: Everywhere
   start: Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
      Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

--- found anomaly call chain ----, num: 130
Node: < Application, Lorg/eclipse/cdt/dsf/ui/viewmodel/update/MultiLevelUpdateHandler, done()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor, handleRejectedExecutionException()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor, done()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Label, setText(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

      Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

--- found anomaly call chain ----, num: 131
Node: < Application, Lorg/eclipse/cdt/dsf/ui/viewmodel/update/MultiLevelUpdateHandler, done()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor, handleRejectedExecutionException()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor, done()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/Dialog, shortenText(Ljava/lang/String;Lorg/eclipse/swt/widgets/Control;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, internal_new_GC(Lorg/eclipse/swt/graphics/GCData;)J > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, getSystemFont()Lorg/eclipse/swt/graphics/Font; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/GdbCoreDebuggerPage$2, widgetSelected(Lorg/eclipse/swt/events/SelectionEvent;)V > Context: Everywhere
   start: Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
      Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

--- found anomaly call chain ----, num: 132
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/GdbCoreDebuggerPage$2, widgetSelected(Lorg/eclipse/swt/events/SelectionEvent;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/GdbCoreDebuggerPage$2, handleGDBButtonSelected()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/FileDialog, open()Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Label, setText(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

      Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

--- found anomaly call chain ----, num: 133
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/GdbCoreDebuggerPage$2, widgetSelected(Lorg/eclipse/swt/events/SelectionEvent;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/GdbCoreDebuggerPage$2, handleGDBButtonSelected()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/FileDialog, open()Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/Dialog, shortenText(Ljava/lang/String;Lorg/eclipse/swt/widgets/Control;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, internal_new_GC(Lorg/eclipse/swt/graphics/GCData;)J > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, getSystemFont()Lorg/eclipse/swt/graphics/Font; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/memory/SelectUpdatePolicyAction$1, menuShown(Lorg/eclipse/swt/events/MenuEvent;)V > Context: Everywhere
   start: Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
      Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

--- found anomaly call chain ----, num: 134
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/memory/SelectUpdatePolicyAction$1, menuShown(Lorg/eclipse/swt/events/MenuEvent;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, dispose()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, release(Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Label, setText(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

      Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

--- found anomaly call chain ----, num: 135
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/memory/SelectUpdatePolicyAction$1, menuShown(Lorg/eclipse/swt/events/MenuEvent;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, dispose()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, release(Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/Dialog, shortenText(Ljava/lang/String;Lorg/eclipse/swt/widgets/Control;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, internal_new_GC(Lorg/eclipse/swt/graphics/GCData;)J > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, getSystemFont()Lorg/eclipse/swt/graphics/Font; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/actions/DsfTerminateCommand$2, doExecute()V > Context: Everywhere
   start: Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
      Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

--- found anomaly call chain ----, num: 136
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/actions/DsfTerminateCommand$2, doExecute()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor, <init>(Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/DsfExecutable, <init>()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Thread, getStackTrace()[Ljava/lang/StackTraceElement; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/SecurityManager, checkPermission(Ljava/security/Permission;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/security/AccessController, checkPermission(Ljava/security/Permission;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Label, setText(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

      Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

--- found anomaly call chain ----, num: 137
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/actions/DsfTerminateCommand$2, doExecute()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor, <init>(Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/DsfExecutable, <init>()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Thread, getStackTrace()[Ljava/lang/StackTraceElement; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/SecurityManager, checkPermission(Ljava/security/Permission;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/security/AccessController, checkPermission(Ljava/security/Permission;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/Dialog, shortenText(Ljava/lang/String;Lorg/eclipse/swt/widgets/Control;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, internal_new_GC(Lorg/eclipse/swt/graphics/GCData;)J > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, getSystemFont()Lorg/eclipse/swt/graphics/Font; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyPart$11$1$2, run()V > Context: Everywhere
   start: Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
      Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

--- found anomaly call chain ----, num: 138
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyPart$11$1$2, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ErrorDialog, openError(Lorg/eclipse/swt/widgets/Shell;Ljava/lang/String;Ljava/lang/String;Lorg/eclipse/core/runtime/IStatus;)I > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ErrorDialog, openError(Lorg/eclipse/swt/widgets/Shell;Ljava/lang/String;Ljava/lang/String;Lorg/eclipse/core/runtime/IStatus;I)I > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ErrorDialog, <init>(Lorg/eclipse/swt/widgets/Shell;Ljava/lang/String;Ljava/lang/String;Lorg/eclipse/core/runtime/IStatus;I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Label, setText(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

      Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

--- found anomaly call chain ----, num: 139
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyPart$11$1$2, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ErrorDialog, openError(Lorg/eclipse/swt/widgets/Shell;Ljava/lang/String;Ljava/lang/String;Lorg/eclipse/core/runtime/IStatus;)I > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ErrorDialog, openError(Lorg/eclipse/swt/widgets/Shell;Ljava/lang/String;Ljava/lang/String;Lorg/eclipse/core/runtime/IStatus;I)I > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ErrorDialog, <init>(Lorg/eclipse/swt/widgets/Shell;Ljava/lang/String;Ljava/lang/String;Lorg/eclipse/core/runtime/IStatus;I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/Dialog, shortenText(Ljava/lang/String;Lorg/eclipse/swt/widgets/Control;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, internal_new_GC(Lorg/eclipse/swt/graphics/GCData;)J > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, getSystemFont()Lorg/eclipse/swt/graphics/Font; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/GdbAdapterFactory$SessionAdapterSet$1, getModelIdentifiers()[Ljava/lang/String; > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/GDBSolibBlock$2, widgetSelected(Lorg/eclipse/swt/events/SelectionEvent;)V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/ui/viewmodel/update/AbstractCachingVMProvider$RootElementMarkerEntry, toString()Ljava/lang/String; > Context: Everywhere
   start: Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
      Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

--- found anomaly call chain ----, num: 140
Node: < Application, Lorg/eclipse/cdt/dsf/ui/viewmodel/update/AbstractCachingVMProvider$RootElementMarkerEntry, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Label, setText(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

      Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

--- found anomaly call chain ----, num: 141
Node: < Application, Lorg/eclipse/cdt/dsf/ui/viewmodel/update/AbstractCachingVMProvider$RootElementMarkerEntry, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/Dialog, shortenText(Ljava/lang/String;Lorg/eclipse/swt/widgets/Control;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, internal_new_GC(Lorg/eclipse/swt/graphics/GCData;)J > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, getSystemFont()Lorg/eclipse/swt/graphics/Font; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyPart$9, menuAboutToShow(Lorg/eclipse/jface/action/IMenuManager;)V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/SourceColorerJob, runInUIThread(Lorg/eclipse/core/runtime/IProgressMonitor;)Lorg/eclipse/core/runtime/IStatus; > Context: Everywhere
   start: Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
      Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

--- found anomaly call chain ----, num: 142
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/SourceColorerJob, runInUIThread(Lorg/eclipse/core/runtime/IProgressMonitor;)Lorg/eclipse/core/runtime/IStatus; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Label, setText(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

      Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

--- found anomaly call chain ----, num: 143
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/SourceColorerJob, runInUIThread(Lorg/eclipse/core/runtime/IProgressMonitor;)Lorg/eclipse/core/runtime/IStatus; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/Dialog, shortenText(Ljava/lang/String;Lorg/eclipse/swt/widgets/Control;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, internal_new_GC(Lorg/eclipse/swt/graphics/GCData;)J > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, getSystemFont()Lorg/eclipse/swt/graphics/Font; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/SourceColorerJob, run()V > Context: Everywhere
   start: Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
      Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

--- found anomaly call chain ----, num: 144
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/SourceColorerJob, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/runtime/jobs/Job, schedule()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/InternalJob, schedule(J)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/JobManager, schedule(Lorg/eclipse/core/internal/jobs/InternalJob;JZ)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Label, setText(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

      Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

--- found anomaly call chain ----, num: 145
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/SourceColorerJob, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/runtime/jobs/Job, schedule()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/InternalJob, schedule(J)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/JobManager, schedule(Lorg/eclipse/core/internal/jobs/InternalJob;JZ)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/Dialog, shortenText(Ljava/lang/String;Lorg/eclipse/swt/widgets/Control;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, internal_new_GC(Lorg/eclipse/swt/graphics/GCData;)J > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, getSystemFont()Lorg/eclipse/swt/graphics/Font; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/launch/AbstractThreadVMNode$6$1, run()V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/sourcelookup/DsfSourceDisplayAdapter$2$1, handleSuccess()V > Context: Everywhere
   start: Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
      Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

--- found anomaly call chain ----, num: 146
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/sourcelookup/DsfSourceDisplayAdapter$2$1, handleSuccess()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/sourcelookup/DsfSourceDisplayAdapter, access$4(Lorg/eclipse/cdt/dsf/debug/ui/sourcelookup/DsfSourceDisplayAdapter;Lorg/eclipse/cdt/dsf/debug/ui/sourcelookup/SourceLookupResult;Lorg/eclipse/cdt/dsf/debug/ui/sourcelookup/DsfSourceDisplayAdapter$FrameData;Lorg/eclipse/ui/IWorkbenchPage;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/sourcelookup/DsfSourceDisplayAdapter, startDisplayJob(Lorg/eclipse/cdt/dsf/debug/ui/sourcelookup/SourceLookupResult;Lorg/eclipse/cdt/dsf/debug/ui/sourcelookup/DsfSourceDisplayAdapter$FrameData;Lorg/eclipse/ui/IWorkbenchPage;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/runtime/jobs/Job, schedule()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/InternalJob, schedule(J)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/JobManager, schedule(Lorg/eclipse/core/internal/jobs/InternalJob;JZ)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Label, setText(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

      Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

--- found anomaly call chain ----, num: 147
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/sourcelookup/DsfSourceDisplayAdapter$2$1, handleSuccess()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/sourcelookup/DsfSourceDisplayAdapter, access$4(Lorg/eclipse/cdt/dsf/debug/ui/sourcelookup/DsfSourceDisplayAdapter;Lorg/eclipse/cdt/dsf/debug/ui/sourcelookup/SourceLookupResult;Lorg/eclipse/cdt/dsf/debug/ui/sourcelookup/DsfSourceDisplayAdapter$FrameData;Lorg/eclipse/ui/IWorkbenchPage;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/sourcelookup/DsfSourceDisplayAdapter, startDisplayJob(Lorg/eclipse/cdt/dsf/debug/ui/sourcelookup/SourceLookupResult;Lorg/eclipse/cdt/dsf/debug/ui/sourcelookup/DsfSourceDisplayAdapter$FrameData;Lorg/eclipse/ui/IWorkbenchPage;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/runtime/jobs/Job, schedule()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/InternalJob, schedule(J)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/JobManager, schedule(Lorg/eclipse/core/internal/jobs/InternalJob;JZ)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/Dialog, shortenText(Ljava/lang/String;Lorg/eclipse/swt/widgets/Control;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, internal_new_GC(Lorg/eclipse/swt/graphics/GCData;)J > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, getSystemFont()Lorg/eclipse/swt/graphics/Font; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyPart$25$1, run()V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/GdbDebuggerPage$4, widgetSelected(Lorg/eclipse/swt/events/SelectionEvent;)V > Context: Everywhere
   start: Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
      Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

--- found anomaly call chain ----, num: 148
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/GdbDebuggerPage$4, widgetSelected(Lorg/eclipse/swt/events/SelectionEvent;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/GdbDebuggerPage$4, handleGDBInitButtonSelected()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/FileDialog, open()Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Label, setText(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

      Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

--- found anomaly call chain ----, num: 149
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/GdbDebuggerPage$4, widgetSelected(Lorg/eclipse/swt/events/SelectionEvent;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/GdbDebuggerPage$4, handleGDBInitButtonSelected()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/FileDialog, open()Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/Dialog, shortenText(Ljava/lang/String;Lorg/eclipse/swt/widgets/Control;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, internal_new_GC(Lorg/eclipse/swt/graphics/GCData;)J > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, getSystemFont()Lorg/eclipse/swt/graphics/Font; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyPart$3, toggleLineBreakpoints(Lorg/eclipse/ui/IWorkbenchPart;Lorg/eclipse/jface/viewers/ISelection;)V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyPart$3, canToggleLineBreakpoints(Lorg/eclipse/ui/IWorkbenchPart;Lorg/eclipse/jface/viewers/ISelection;)Z > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyPart$3, toggleMethodBreakpoints(Lorg/eclipse/ui/IWorkbenchPart;Lorg/eclipse/jface/viewers/ISelection;)V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyPart$3, canToggleMethodBreakpoints(Lorg/eclipse/ui/IWorkbenchPart;Lorg/eclipse/jface/viewers/ISelection;)Z > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyPart$3, toggleWatchpoints(Lorg/eclipse/ui/IWorkbenchPart;Lorg/eclipse/jface/viewers/ISelection;)V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyPart$3, canToggleWatchpoints(Lorg/eclipse/ui/IWorkbenchPart;Lorg/eclipse/jface/viewers/ISelection;)Z > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/ui/viewmodel/update/AbstractCachingVMProvider$FlushMarkerKey, toString()Ljava/lang/String; > Context: Everywhere
   start: Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
      Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

--- found anomaly call chain ----, num: 150
Node: < Application, Lorg/eclipse/cdt/dsf/ui/viewmodel/update/AbstractCachingVMProvider$FlushMarkerKey, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Label, setText(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

      Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

--- found anomaly call chain ----, num: 151
Node: < Application, Lorg/eclipse/cdt/dsf/ui/viewmodel/update/AbstractCachingVMProvider$FlushMarkerKey, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/Dialog, shortenText(Ljava/lang/String;Lorg/eclipse/swt/widgets/Control;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, internal_new_GC(Lorg/eclipse/swt/graphics/GCData;)J > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, getSystemFont()Lorg/eclipse/swt/graphics/Font; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/numberformat/NumberFormatsContribution$SelectNumberFormatAction, run()V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyPart$18, run()V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/variable/VariableVMNode$8, isEnabled(Lorg/eclipse/core/runtime/IStatus;Ljava/util/Map;)Z > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/actions/DsfStepOverCommand$2, doExecute()V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/variable/VariableVMNode$20, handleCompleted()V > Context: Everywhere
   start: Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
      Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

--- found anomaly call chain ----, num: 152
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/variable/VariableVMNode$20, handleCompleted()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/variable/VariableVMNode$20$1, <init>(Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/variable/VariableVMNode$20;Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;Lorg/eclipse/debug/internal/ui/viewers/model/provisional/IChildrenUpdate;Ljava/util/List;Lorg/eclipse/cdt/dsf/debug/service/IExpressions;Lorg/eclipse/cdt/dsf/debug/service/IStack$IFrameDMContext;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/MultiRequestMonitor, <init>(Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor, <init>(Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/DsfExecutable, <init>()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Thread, getStackTrace()[Ljava/lang/StackTraceElement; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/SecurityManager, checkPermission(Ljava/security/Permission;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/security/AccessController, checkPermission(Ljava/security/Permission;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Label, setText(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

      Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

--- found anomaly call chain ----, num: 153
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/variable/VariableVMNode$20, handleCompleted()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/variable/VariableVMNode$20$1, <init>(Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/variable/VariableVMNode$20;Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;Lorg/eclipse/debug/internal/ui/viewers/model/provisional/IChildrenUpdate;Ljava/util/List;Lorg/eclipse/cdt/dsf/debug/service/IExpressions;Lorg/eclipse/cdt/dsf/debug/service/IStack$IFrameDMContext;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/MultiRequestMonitor, <init>(Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor, <init>(Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/DsfExecutable, <init>()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Thread, getStackTrace()[Ljava/lang/StackTraceElement; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/SecurityManager, checkPermission(Ljava/security/Permission;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/security/AccessController, checkPermission(Ljava/security/Permission;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/Dialog, shortenText(Ljava/lang/String;Lorg/eclipse/swt/widgets/Control;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, internal_new_GC(Lorg/eclipse/swt/graphics/GCData;)J > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, getSystemFont()Lorg/eclipse/swt/graphics/Font; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/actions/GdbConnectCommand$2, run()V > Context: Everywhere
   start: Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
      Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

--- found anomaly call chain ----, num: 154
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/actions/GdbConnectCommand$2, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/actions/GdbConnectCommand$2$1, <init>(Lorg/eclipse/cdt/dsf/gdb/internal/ui/actions/GdbConnectCommand$2;Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;Lorg/eclipse/cdt/dsf/debug/service/command/ICommandControlService$ICommandControlDMContext;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/DataRequestMonitor, <init>(Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor, <init>(Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/DsfExecutable, <init>()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Thread, getStackTrace()[Ljava/lang/StackTraceElement; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/SecurityManager, checkPermission(Ljava/security/Permission;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/security/AccessController, checkPermission(Ljava/security/Permission;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Label, setText(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

      Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

--- found anomaly call chain ----, num: 155
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/actions/GdbConnectCommand$2, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/actions/GdbConnectCommand$2$1, <init>(Lorg/eclipse/cdt/dsf/gdb/internal/ui/actions/GdbConnectCommand$2;Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;Lorg/eclipse/cdt/dsf/debug/service/command/ICommandControlService$ICommandControlDMContext;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/DataRequestMonitor, <init>(Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor, <init>(Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/DsfExecutable, <init>()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Thread, getStackTrace()[Ljava/lang/StackTraceElement; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/SecurityManager, checkPermission(Ljava/security/Permission;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/security/AccessController, checkPermission(Ljava/security/Permission;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/Dialog, shortenText(Ljava/lang/String;Lorg/eclipse/swt/widgets/Control;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, internal_new_GC(Lorg/eclipse/swt/graphics/GCData;)J > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, getSystemFont()Lorg/eclipse/swt/graphics/Font; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/register/RegisterVMNode$11, run()V > Context: Everywhere
   start: Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
      Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

--- found anomaly call chain ----, num: 156
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/register/RegisterVMNode$11, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/register/RegisterVMNode$11$1, <init>(Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/register/RegisterVMNode$11;Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;Lorg/eclipse/cdt/dsf/concurrent/DataRequestMonitor;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/DataRequestMonitor, <init>(Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor, <init>(Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/DsfExecutable, <init>()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Thread, getStackTrace()[Ljava/lang/StackTraceElement; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/SecurityManager, checkPermission(Ljava/security/Permission;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/security/AccessController, checkPermission(Ljava/security/Permission;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Label, setText(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

      Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

--- found anomaly call chain ----, num: 157
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/register/RegisterVMNode$11, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/register/RegisterVMNode$11$1, <init>(Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/register/RegisterVMNode$11;Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;Lorg/eclipse/cdt/dsf/concurrent/DataRequestMonitor;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/DataRequestMonitor, <init>(Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor, <init>(Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/DsfExecutable, <init>()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Thread, getStackTrace()[Ljava/lang/StackTraceElement; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/SecurityManager, checkPermission(Ljava/security/Permission;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/security/AccessController, checkPermission(Ljava/security/Permission;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/Dialog, shortenText(Ljava/lang/String;Lorg/eclipse/swt/widgets/Control;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, internal_new_GC(Lorg/eclipse/swt/graphics/GCData;)J > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, getSystemFont()Lorg/eclipse/swt/graphics/Font; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/actions/GdbConnectCommand$PromptForPidJob, <init>(Lorg/eclipse/cdt/dsf/gdb/internal/ui/actions/GdbConnectCommand;Ljava/lang/String;[Lorg/eclipse/cdt/core/IProcessInfo;Lorg/eclipse/cdt/dsf/concurrent/DataRequestMonitor;)V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyRulerColumn$1, run()V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/CMainTab$6, modifyText(Lorg/eclipse/swt/events/ModifyEvent;)V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/ui/viewmodel/AbstractVMProvider$2, handleCompleted()V > Context: Everywhere
   start: Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
      Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

--- found anomaly call chain ----, num: 158
Node: < Application, Lorg/eclipse/cdt/dsf/ui/viewmodel/AbstractVMProvider$2, handleCompleted()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Label, setText(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

      Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

--- found anomaly call chain ----, num: 159
Node: < Application, Lorg/eclipse/cdt/dsf/ui/viewmodel/AbstractVMProvider$2, handleCompleted()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/Dialog, shortenText(Ljava/lang/String;Lorg/eclipse/swt/widgets/Control;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, internal_new_GC(Lorg/eclipse/swt/graphics/GCData;)J > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, getSystemFont()Lorg/eclipse/swt/graphics/Font; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/ui/viewmodel/AbstractVMProvider$2, toString()Ljava/lang/String; > Context: Everywhere
   start: Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
      Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

--- found anomaly call chain ----, num: 160
Node: < Application, Lorg/eclipse/cdt/dsf/ui/viewmodel/AbstractVMProvider$2, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Label, setText(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

      Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

--- found anomaly call chain ----, num: 161
Node: < Application, Lorg/eclipse/cdt/dsf/ui/viewmodel/AbstractVMProvider$2, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/Dialog, shortenText(Ljava/lang/String;Lorg/eclipse/swt/widgets/Control;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, internal_new_GC(Lorg/eclipse/swt/graphics/GCData;)J > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, getSystemFont()Lorg/eclipse/swt/graphics/Font; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/variable/VariableVMNode$4, isEnabled(Lorg/eclipse/core/runtime/IStatus;Ljava/util/Map;)Z > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/CMainTab$10, run()V > Context: Everywhere
   start: Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
      Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

--- found anomaly call chain ----, num: 162
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/CMainTab$10, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/GdbUIPlugin, errorDialog(Ljava/lang/String;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ErrorDialog, openError(Lorg/eclipse/swt/widgets/Shell;Ljava/lang/String;Ljava/lang/String;Lorg/eclipse/core/runtime/IStatus;)I > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ErrorDialog, openError(Lorg/eclipse/swt/widgets/Shell;Ljava/lang/String;Ljava/lang/String;Lorg/eclipse/core/runtime/IStatus;I)I > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ErrorDialog, <init>(Lorg/eclipse/swt/widgets/Shell;Ljava/lang/String;Ljava/lang/String;Lorg/eclipse/core/runtime/IStatus;I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Label, setText(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

      Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

--- found anomaly call chain ----, num: 163
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/CMainTab$10, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/GdbUIPlugin, errorDialog(Ljava/lang/String;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ErrorDialog, openError(Lorg/eclipse/swt/widgets/Shell;Ljava/lang/String;Ljava/lang/String;Lorg/eclipse/core/runtime/IStatus;)I > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ErrorDialog, openError(Lorg/eclipse/swt/widgets/Shell;Ljava/lang/String;Ljava/lang/String;Lorg/eclipse/core/runtime/IStatus;I)I > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ErrorDialog, <init>(Lorg/eclipse/swt/widgets/Shell;Ljava/lang/String;Ljava/lang/String;Lorg/eclipse/core/runtime/IStatus;I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/Dialog, shortenText(Ljava/lang/String;Lorg/eclipse/swt/widgets/Control;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, internal_new_GC(Lorg/eclipse/swt/graphics/GCData;)J > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, getSystemFont()Lorg/eclipse/swt/graphics/Font; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/actions/GdbAbstractReverseStepCommand$1, execute(Lorg/eclipse/cdt/dsf/concurrent/DataRequestMonitor;)V > Context: Everywhere
   start: Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
      Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

--- found anomaly call chain ----, num: 164
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/actions/GdbAbstractReverseStepCommand$1, execute(Lorg/eclipse/cdt/dsf/concurrent/DataRequestMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor, done()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Label, setText(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

      Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

--- found anomaly call chain ----, num: 165
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/actions/GdbAbstractReverseStepCommand$1, execute(Lorg/eclipse/cdt/dsf/concurrent/DataRequestMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor, done()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/Dialog, shortenText(Ljava/lang/String;Lorg/eclipse/swt/widgets/Control;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, internal_new_GC(Lorg/eclipse/swt/graphics/GCData;)J > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, getSystemFont()Lorg/eclipse/swt/graphics/Font; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/actions/GdbReverseToggleCommand$2, execute(Lorg/eclipse/cdt/dsf/concurrent/DataRequestMonitor;)V > Context: Everywhere
   start: Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
      Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

--- found anomaly call chain ----, num: 166
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/actions/GdbReverseToggleCommand$2, execute(Lorg/eclipse/cdt/dsf/concurrent/DataRequestMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor, done()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Label, setText(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

      Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

--- found anomaly call chain ----, num: 167
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/actions/GdbReverseToggleCommand$2, execute(Lorg/eclipse/cdt/dsf/concurrent/DataRequestMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor, done()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/Dialog, shortenText(Ljava/lang/String;Lorg/eclipse/swt/widgets/Control;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, internal_new_GC(Lorg/eclipse/swt/graphics/GCData;)J > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, getSystemFont()Lorg/eclipse/swt/graphics/Font; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/presentation/CSourcePresentationCreator$2, run()V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/ui/viewmodel/update/AbstractCachingVMProvider$ElementDataKey, toString()Ljava/lang/String; > Context: Everywhere
   start: Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
      Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

--- found anomaly call chain ----, num: 168
Node: < Application, Lorg/eclipse/cdt/dsf/ui/viewmodel/update/AbstractCachingVMProvider$ElementDataKey, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Label, setText(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

      Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

--- found anomaly call chain ----, num: 169
Node: < Application, Lorg/eclipse/cdt/dsf/ui/viewmodel/update/AbstractCachingVMProvider$ElementDataKey, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/Dialog, shortenText(Ljava/lang/String;Lorg/eclipse/swt/widgets/Control;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, internal_new_GC(Lorg/eclipse/swt/graphics/GCData;)J > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, getSystemFont()Lorg/eclipse/swt/graphics/Font; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/ui/viewmodel/update/AbstractCachingVMProvider$ElementDataKey, equals(Ljava/lang/Object;)Z > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/ui/viewmodel/update/AbstractCachingVMProvider$ElementDataKey, hashCode()I > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/expression/ExpressionVMProvider$3, run()V > Context: Everywhere
   start: Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
      Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

--- found anomaly call chain ----, num: 170
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/expression/ExpressionVMProvider$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/service/DsfServicesTracker, <init>(Lorg/osgi/framework/BundleContext;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AssertionError, <init>(Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Label, setText(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

      Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

--- found anomaly call chain ----, num: 171
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/expression/ExpressionVMProvider$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/service/DsfServicesTracker, <init>(Lorg/osgi/framework/BundleContext;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AssertionError, <init>(Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/Dialog, shortenText(Ljava/lang/String;Lorg/eclipse/swt/widgets/Control;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, internal_new_GC(Lorg/eclipse/swt/graphics/GCData;)J > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, getSystemFont()Lorg/eclipse/swt/graphics/Font; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/expression/ExpressionVMProvider$1, propertyChange(Lorg/eclipse/jface/util/PropertyChangeEvent;)V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/launch/actions/ExpandStackAction$1, run()V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyPart$1, partActivated(Lorg/eclipse/ui/IWorkbenchPartReference;)V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyPart$1, partBroughtToTop(Lorg/eclipse/ui/IWorkbenchPartReference;)V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyPart$1, partClosed(Lorg/eclipse/ui/IWorkbenchPartReference;)V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyPart$1, partDeactivated(Lorg/eclipse/ui/IWorkbenchPartReference;)V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyPart$1, partOpened(Lorg/eclipse/ui/IWorkbenchPartReference;)V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyPart$1, partHidden(Lorg/eclipse/ui/IWorkbenchPartReference;)V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyPart$1, partVisible(Lorg/eclipse/ui/IWorkbenchPartReference;)V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyPart$1, partInputChanged(Lorg/eclipse/ui/IWorkbenchPartReference;)V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyPart$7, selectionChanged(Lorg/eclipse/jface/viewers/SelectionChangedEvent;)V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/launch/StackFramesVMNode$4, isEnabled(Lorg/eclipse/core/runtime/IStatus;Ljava/util/Map;)Z > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/launch/AbstractLaunchVMProvider$4$1, run()V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/actions/DsfStepIntoCommand$2, doExecute()V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyPart$13, run()V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/viewmodel/launch/ThreadVMNode$2, handleCompleted()V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyPart$20$2, run()V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/ui/viewmodel/AbstractVMAdapter$1, run()V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/tracing/TracingConsole$2, run()V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/variable/VariableVMNode$9, isEnabled(Lorg/eclipse/core/runtime/IStatus;Ljava/util/Map;)Z > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/viewmodel/numberformat/detail/NumberFormatDetailPane$3, focusGained(Lorg/eclipse/swt/events/FocusEvent;)V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/viewmodel/numberformat/detail/NumberFormatDetailPane$3, focusLost(Lorg/eclipse/swt/events/FocusEvent;)V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/modules/ModulesVMNode$3, run()V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyPart$34, run()V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/CMainTab$1, modifyText(Lorg/eclipse/swt/events/ModifyEvent;)V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyRulerColumn$2, paintControl(Lorg/eclipse/swt/events/PaintEvent;)V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/actions/GdbReverseResumeCommand$1, execute(Lorg/eclipse/cdt/dsf/concurrent/DataRequestMonitor;)V > Context: Everywhere
   start: Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
      Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

--- found anomaly call chain ----, num: 172
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/actions/GdbReverseResumeCommand$1, execute(Lorg/eclipse/cdt/dsf/concurrent/DataRequestMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor, done()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Label, setText(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

      Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

--- found anomaly call chain ----, num: 173
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/actions/GdbReverseResumeCommand$1, execute(Lorg/eclipse/cdt/dsf/concurrent/DataRequestMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor, done()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/Dialog, shortenText(Ljava/lang/String;Lorg/eclipse/swt/widgets/Control;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, internal_new_GC(Lorg/eclipse/swt/graphics/GCData;)J > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, getSystemFont()Lorg/eclipse/swt/graphics/Font; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/register/RegisterBitFieldVMNode$13, run()V > Context: Everywhere
   start: Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
      Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

--- found anomaly call chain ----, num: 174
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/register/RegisterBitFieldVMNode$13, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/register/RegisterBitFieldVMNode$13$1, <init>(Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/register/RegisterBitFieldVMNode$13;Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;Lorg/eclipse/cdt/dsf/concurrent/DataRequestMonitor;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/DataRequestMonitor, <init>(Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor, <init>(Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/DsfExecutable, <init>()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Thread, getStackTrace()[Ljava/lang/StackTraceElement; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/SecurityManager, checkPermission(Ljava/security/Permission;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/security/AccessController, checkPermission(Ljava/security/Permission;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Label, setText(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

      Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

--- found anomaly call chain ----, num: 175
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/register/RegisterBitFieldVMNode$13, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/register/RegisterBitFieldVMNode$13$1, <init>(Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/register/RegisterBitFieldVMNode$13;Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;Lorg/eclipse/cdt/dsf/concurrent/DataRequestMonitor;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/DataRequestMonitor, <init>(Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor, <init>(Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/DsfExecutable, <init>()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Thread, getStackTrace()[Ljava/lang/StackTraceElement; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/SecurityManager, checkPermission(Ljava/security/Permission;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/security/AccessController, checkPermission(Ljava/security/Permission;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/Dialog, shortenText(Ljava/lang/String;Lorg/eclipse/swt/widgets/Control;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, internal_new_GC(Lorg/eclipse/swt/graphics/GCData;)J > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, getSystemFont()Lorg/eclipse/swt/graphics/Font; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/ui/viewmodel/AbstractVMAdapter$4, run()V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/ui/viewmodel/update/MultiLevelUpdateHandler$DummyLabelUpdate, getElement()Ljava/lang/Object; > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/ui/viewmodel/update/MultiLevelUpdateHandler$DummyLabelUpdate, getElementPath()Lorg/eclipse/jface/viewers/TreePath; > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/ui/viewmodel/update/MultiLevelUpdateHandler$DummyLabelUpdate, getPresentationContext()Lorg/eclipse/debug/internal/ui/viewers/model/provisional/IPresentationContext; > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/ui/viewmodel/update/MultiLevelUpdateHandler$DummyLabelUpdate, getViewerInput()Ljava/lang/Object; > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/ui/viewmodel/update/MultiLevelUpdateHandler$DummyLabelUpdate, cancel()V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/ui/viewmodel/update/MultiLevelUpdateHandler$DummyLabelUpdate, getStatus()Lorg/eclipse/core/runtime/IStatus; > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/ui/viewmodel/update/MultiLevelUpdateHandler$DummyLabelUpdate, isCanceled()Z > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/ui/viewmodel/update/MultiLevelUpdateHandler$DummyLabelUpdate, setStatus(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/ui/viewmodel/update/MultiLevelUpdateHandler$DummyLabelUpdate, getColumnIds()[Ljava/lang/String; > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/ui/viewmodel/update/MultiLevelUpdateHandler$DummyLabelUpdate, setBackground(Lorg/eclipse/swt/graphics/RGB;I)V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/ui/viewmodel/update/MultiLevelUpdateHandler$DummyLabelUpdate, setFontData(Lorg/eclipse/swt/graphics/FontData;I)V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/ui/viewmodel/update/MultiLevelUpdateHandler$DummyLabelUpdate, setForeground(Lorg/eclipse/swt/graphics/RGB;I)V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/ui/viewmodel/update/MultiLevelUpdateHandler$DummyLabelUpdate, setImageDescriptor(Lorg/eclipse/jface/resource/ImageDescriptor;I)V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/ui/viewmodel/update/MultiLevelUpdateHandler$DummyLabelUpdate, setLabel(Ljava/lang/String;I)V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/ui/viewmodel/update/MultiLevelUpdateHandler$DummyLabelUpdate, done()V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/contexts/DsfSuspendTrigger$1, run()V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/SteppingController$1, propertyChange(Lorg/eclipse/jface/util/PropertyChangeEvent;)V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/ui/viewmodel/update/AbstractCachingVMProvider$RootElementMarkerKey, equals(Ljava/lang/Object;)Z > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/ui/viewmodel/update/AbstractCachingVMProvider$RootElementMarkerKey, hashCode()I > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/ui/viewmodel/update/AbstractCachingVMProvider$RootElementMarkerKey, toString()Ljava/lang/String; > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/SteppingController$5, run()V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/sourcelookup/DsfSourceDisplayAdapter$FrameData, equals(Ljava/lang/Object;)Z > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/sourcelookup/DsfSourceDisplayAdapter$FrameData, isIdentical(Lorg/eclipse/cdt/dsf/debug/ui/sourcelookup/DsfSourceDisplayAdapter$FrameData;)Z > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/tracing/TracingConsole$1, run()V > Context: Everywhere
   start: Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
      Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

--- found anomaly call chain ----, num: 176
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/tracing/TracingConsole$1, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/service/DsfServicesTracker, <init>(Lorg/osgi/framework/BundleContext;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AssertionError, <init>(Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Label, setText(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

      Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

--- found anomaly call chain ----, num: 177
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/tracing/TracingConsole$1, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/service/DsfServicesTracker, <init>(Lorg/osgi/framework/BundleContext;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AssertionError, <init>(Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/Dialog, shortenText(Ljava/lang/String;Lorg/eclipse/swt/widgets/Control;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, internal_new_GC(Lorg/eclipse/swt/graphics/GCData;)J > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, getSystemFont()Lorg/eclipse/swt/graphics/Font; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyPart$5, run()V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyPart$23, run()V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/launch/StackFramesVMNode$11, run()V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/sourcelookup/DsfSourceDisplayAdapter$DisplayJob$3, run()V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/ui/viewmodel/update/AutomaticUpdatePolicy$1, getUpdateFlags(Ljava/lang/Object;Lorg/eclipse/jface/viewers/TreePath;)I > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/ui/viewmodel/update/AutomaticUpdatePolicy$1, includes(Lorg/eclipse/cdt/dsf/ui/viewmodel/update/IElementUpdateTester;)Z > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/ui/viewmodel/update/AutomaticUpdatePolicy$1, toString()Ljava/lang/String; > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyPart$17$2$1, run()V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/CDebuggerTab$2, widgetSelected(Lorg/eclipse/swt/events/SelectionEvent;)V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/viewmodel/detailsupport/DetailPaneMaxLengthDialog$1, isValid(Ljava/lang/String;)Ljava/lang/String; > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/CMainTab$2, widgetSelected(Lorg/eclipse/swt/events/SelectionEvent;)V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/launch/StandardProcessVMNode$VMC, getVMNode()Lorg/eclipse/cdt/dsf/ui/viewmodel/IVMNode; > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/launch/StandardProcessVMNode$VMC, getAdapter(Ljava/lang/Class;)Ljava/lang/Object; > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/launch/StandardProcessVMNode$VMC, toString()Ljava/lang/String; > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/launch/StandardProcessVMNode$VMC, getAttribute(Ljava/lang/String;)Ljava/lang/String; > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/launch/StandardProcessVMNode$VMC, getExitValue()I > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/launch/StandardProcessVMNode$VMC, getLabel()Ljava/lang/String; > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/launch/StandardProcessVMNode$VMC, getLaunch()Lorg/eclipse/debug/core/ILaunch; > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/launch/StandardProcessVMNode$VMC, getStreamsProxy()Lorg/eclipse/debug/core/model/IStreamsProxy; > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/launch/StandardProcessVMNode$VMC, setAttribute(Ljava/lang/String;Ljava/lang/String;)V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/launch/StandardProcessVMNode$VMC, canTerminate()Z > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/launch/StandardProcessVMNode$VMC, isTerminated()Z > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/launch/StandardProcessVMNode$VMC, terminate()V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/launch/StandardProcessVMNode$VMC, equals(Ljava/lang/Object;)Z > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/launch/StandardProcessVMNode$VMC, hashCode()I > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/expression/ExpressionManagerVMNode$NewExpressionVMC, <init>(Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/expression/ExpressionManagerVMNode;)V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/expression/ExpressionManagerVMNode$NewExpressionVMC, getAdapter(Ljava/lang/Class;)Ljava/lang/Object; > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/expression/ExpressionManagerVMNode$NewExpressionVMC, equals(Ljava/lang/Object;)Z > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/expression/ExpressionManagerVMNode$NewExpressionVMC, hashCode()I > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/preferences/DisassemblyPreferencePage$1, modifyText(Lorg/eclipse/swt/events/ModifyEvent;)V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/viewmodel/launch/ContainerVMNode$4, run()V > Context: Everywhere
   start: Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
      Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

--- found anomaly call chain ----, num: 178
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/viewmodel/launch/ContainerVMNode$4, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/viewmodel/launch/ContainerVMNode$4$1, <init>(Lorg/eclipse/cdt/dsf/gdb/internal/ui/viewmodel/launch/ContainerVMNode$4;Ljava/util/concurrent/Executor;Lorg/eclipse/debug/internal/ui/viewers/model/provisional/IViewerUpdate;Lorg/eclipse/ui/IMemento;Lorg/eclipse/debug/internal/ui/viewers/model/provisional/IElementMementoRequest;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/ui/concurrent/ViewerDataRequestMonitor, <init>(Ljava/util/concurrent/Executor;Lorg/eclipse/debug/internal/ui/viewers/model/provisional/IViewerUpdate;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/DataRequestMonitor, <init>(Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor, <init>(Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/DsfExecutable, <init>()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Thread, getStackTrace()[Ljava/lang/StackTraceElement; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/SecurityManager, checkPermission(Ljava/security/Permission;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/security/AccessController, checkPermission(Ljava/security/Permission;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Label, setText(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

      Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

--- found anomaly call chain ----, num: 179
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/viewmodel/launch/ContainerVMNode$4, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/viewmodel/launch/ContainerVMNode$4$1, <init>(Lorg/eclipse/cdt/dsf/gdb/internal/ui/viewmodel/launch/ContainerVMNode$4;Ljava/util/concurrent/Executor;Lorg/eclipse/debug/internal/ui/viewers/model/provisional/IViewerUpdate;Lorg/eclipse/ui/IMemento;Lorg/eclipse/debug/internal/ui/viewers/model/provisional/IElementMementoRequest;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/ui/concurrent/ViewerDataRequestMonitor, <init>(Ljava/util/concurrent/Executor;Lorg/eclipse/debug/internal/ui/viewers/model/provisional/IViewerUpdate;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/DataRequestMonitor, <init>(Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor, <init>(Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/DsfExecutable, <init>()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Thread, getStackTrace()[Ljava/lang/StackTraceElement; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/SecurityManager, checkPermission(Ljava/security/Permission;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/security/AccessController, checkPermission(Ljava/security/Permission;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/Dialog, shortenText(Ljava/lang/String;Lorg/eclipse/swt/widgets/Control;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, internal_new_GC(Lorg/eclipse/swt/graphics/GCData;)J > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, getSystemFont()Lorg/eclipse/swt/graphics/Font; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/register/RegisterBitFieldVMNode$4, isEnabled(Lorg/eclipse/core/runtime/IStatus;Ljava/util/Map;)Z > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/ui/viewmodel/DefaultVMModelProxyStrategy$3, doubleClick(Lorg/eclipse/jface/viewers/DoubleClickEvent;)V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/register/RegisterVMProvider$2, propertyChange(Lorg/eclipse/jface/util/PropertyChangeEvent;)V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/expression/WatchExpressionDelegate$1, getErrorMessages()[Ljava/lang/String; > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/expression/WatchExpressionDelegate$1, getException()Lorg/eclipse/debug/core/DebugException; > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/expression/WatchExpressionDelegate$1, getExpressionText()Ljava/lang/String; > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/expression/WatchExpressionDelegate$1, getValue()Lorg/eclipse/debug/core/model/IValue; > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/expression/WatchExpressionDelegate$1, hasErrors()Z > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/AbstractDebugVMAdapter$2, run()V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/viewmodel/numberformat/detail/NumberFormatDetailPane$DetailJob$2, runInUIThread(Lorg/eclipse/core/runtime/IProgressMonitor;)Lorg/eclipse/core/runtime/IStatus; > Context: Everywhere
   start: Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
      Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

--- found anomaly call chain ----, num: 180
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/viewmodel/numberformat/detail/NumberFormatDetailPane$DetailJob$2, runInUIThread(Lorg/eclipse/core/runtime/IProgressMonitor;)Lorg/eclipse/core/runtime/IStatus; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Label, setText(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

      Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

--- found anomaly call chain ----, num: 181
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/viewmodel/numberformat/detail/NumberFormatDetailPane$DetailJob$2, runInUIThread(Lorg/eclipse/core/runtime/IProgressMonitor;)Lorg/eclipse/core/runtime/IStatus; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/Dialog, shortenText(Ljava/lang/String;Lorg/eclipse/swt/widgets/Control;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, internal_new_GC(Lorg/eclipse/swt/graphics/GCData;)J > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, getSystemFont()Lorg/eclipse/swt/graphics/Font; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyRulerColumn$InternalListener, viewportChanged(I)V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyRulerColumn$InternalListener, selectionChanged(Lorg/eclipse/jface/viewers/SelectionChangedEvent;)V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/actions/GdbReverseResumeCommand$2, execute(Lorg/eclipse/cdt/dsf/concurrent/DataRequestMonitor;)V > Context: Everywhere
   start: Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
      Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

--- found anomaly call chain ----, num: 182
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/actions/GdbReverseResumeCommand$2, execute(Lorg/eclipse/cdt/dsf/concurrent/DataRequestMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor, done()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Label, setText(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

      Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

--- found anomaly call chain ----, num: 183
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/actions/GdbReverseResumeCommand$2, execute(Lorg/eclipse/cdt/dsf/concurrent/DataRequestMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor, done()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/Dialog, shortenText(Ljava/lang/String;Lorg/eclipse/swt/widgets/Control;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, internal_new_GC(Lorg/eclipse/swt/graphics/GCData;)J > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, getSystemFont()Lorg/eclipse/swt/graphics/Font; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/sourcelookup/DsfSourceDisplayAdapter$LookupJob, <init>(Lorg/eclipse/cdt/dsf/debug/ui/sourcelookup/DsfSourceDisplayAdapter;Lorg/eclipse/cdt/dsf/debug/ui/sourcelookup/DsfSourceDisplayAdapter$FrameData;Lorg/eclipse/ui/IWorkbenchPage;Z)V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/actions/GdbAbstractReverseStepCommand$2, execute(Lorg/eclipse/cdt/dsf/concurrent/DataRequestMonitor;)V > Context: Everywhere
   start: Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
      Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

--- found anomaly call chain ----, num: 184
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/actions/GdbAbstractReverseStepCommand$2, execute(Lorg/eclipse/cdt/dsf/concurrent/DataRequestMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor, done()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Label, setText(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

      Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

--- found anomaly call chain ----, num: 185
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/actions/GdbAbstractReverseStepCommand$2, execute(Lorg/eclipse/cdt/dsf/concurrent/DataRequestMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor, done()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/Dialog, shortenText(Ljava/lang/String;Lorg/eclipse/swt/widgets/Control;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, internal_new_GC(Lorg/eclipse/swt/graphics/GCData;)J > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, getSystemFont()Lorg/eclipse/swt/graphics/Font; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/launch/StackFramesVMNode$2, isEnabled(Lorg/eclipse/core/runtime/IStatus;Ljava/util/Map;)Z > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyRulerColumn$MouseHandler$1, run()V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/actions/DsfStepReturnCommand$1, doExecute()V > Context: Everywhere
   start: Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
      Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

--- found anomaly call chain ----, num: 186
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/actions/DsfStepReturnCommand$1, doExecute()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/actions/DsfStepReturnCommand$1$1, <init>(Lorg/eclipse/cdt/dsf/debug/ui/actions/DsfStepReturnCommand$1;Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;Lorg/eclipse/debug/core/commands/IEnabledStateRequest;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/DataRequestMonitor, <init>(Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor, <init>(Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/DsfExecutable, <init>()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Thread, getStackTrace()[Ljava/lang/StackTraceElement; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/SecurityManager, checkPermission(Ljava/security/Permission;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/security/AccessController, checkPermission(Ljava/security/Permission;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Label, setText(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

      Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

--- found anomaly call chain ----, num: 187
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/actions/DsfStepReturnCommand$1, doExecute()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/actions/DsfStepReturnCommand$1$1, <init>(Lorg/eclipse/cdt/dsf/debug/ui/actions/DsfStepReturnCommand$1;Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;Lorg/eclipse/debug/core/commands/IEnabledStateRequest;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/DataRequestMonitor, <init>(Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor, <init>(Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/DsfExecutable, <init>()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Thread, getStackTrace()[Ljava/lang/StackTraceElement; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/SecurityManager, checkPermission(Ljava/security/Permission;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/security/AccessController, checkPermission(Ljava/security/Permission;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/Dialog, shortenText(Ljava/lang/String;Lorg/eclipse/swt/widgets/Control;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, internal_new_GC(Lorg/eclipse/swt/graphics/GCData;)J > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, getSystemFont()Lorg/eclipse/swt/graphics/Font; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/CMainTab$3, modifyText(Lorg/eclipse/swt/events/ModifyEvent;)V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyPart$17$1, run()V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/register/RegisterVMNode$6, isEnabled(Lorg/eclipse/core/runtime/IStatus;Ljava/util/Map;)Z > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/actions/GdbDisconnectCommand$2, doExecute()V > Context: Everywhere
   start: Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
      Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

--- found anomaly call chain ----, num: 188
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/actions/GdbDisconnectCommand$2, doExecute()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor, <init>(Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/DsfExecutable, <init>()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Thread, getStackTrace()[Ljava/lang/StackTraceElement; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/SecurityManager, checkPermission(Ljava/security/Permission;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/security/AccessController, checkPermission(Ljava/security/Permission;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Label, setText(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

      Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

--- found anomaly call chain ----, num: 189
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/actions/GdbDisconnectCommand$2, doExecute()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor, <init>(Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/DsfExecutable, <init>()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Thread, getStackTrace()[Ljava/lang/StackTraceElement; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/SecurityManager, checkPermission(Ljava/security/Permission;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/security/AccessController, checkPermission(Ljava/security/Permission;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/Dialog, shortenText(Ljava/lang/String;Lorg/eclipse/swt/widgets/Control;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, internal_new_GC(Lorg/eclipse/swt/graphics/GCData;)J > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, getSystemFont()Lorg/eclipse/swt/graphics/Font; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/CArgumentsTab$ControlAccessibleListener, getName(Lorg/eclipse/swt/accessibility/AccessibleEvent;)V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/ui/concurrent/DisplayDsfExecutor$3, run()V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$1, customButtonPressed(Lorg/eclipse/cdt/debug/internal/ui/dialogfields/DialogField;I)V > Context: Everywhere
   start: Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
      Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

--- found anomaly call chain ----, num: 190
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$1, customButtonPressed(Lorg/eclipse/cdt/debug/internal/ui/dialogfields/DialogField;I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock, buttonPressed(I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock, selectFromList()Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock, generateLibraryList([Lorg/eclipse/core/runtime/IPath;Ljava/util/Set;)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog, run(ZZLorg/eclipse/jface/operation/IRunnableWithProgress;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext, run(Lorg/eclipse/jface/operation/IRunnableWithProgress;ZLorg/eclipse/core/runtime/IProgressMonitor;Lorg/eclipse/swt/widgets/Display;)V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Label, setText(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

      Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

--- found anomaly call chain ----, num: 191
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$1, customButtonPressed(Lorg/eclipse/cdt/debug/internal/ui/dialogfields/DialogField;I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock, buttonPressed(I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock, selectFromList()Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock, generateLibraryList([Lorg/eclipse/core/runtime/IPath;Ljava/util/Set;)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog, run(ZZLorg/eclipse/jface/operation/IRunnableWithProgress;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext, run(Lorg/eclipse/jface/operation/IRunnableWithProgress;ZLorg/eclipse/core/runtime/IProgressMonitor;Lorg/eclipse/swt/widgets/Display;)V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/Dialog, shortenText(Ljava/lang/String;Lorg/eclipse/swt/widgets/Control;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, internal_new_GC(Lorg/eclipse/swt/graphics/GCData;)J > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, getSystemFont()Lorg/eclipse/swt/graphics/Font; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$1, selectionChanged(Lorg/eclipse/cdt/debug/internal/ui/dialogfields/DialogField;)V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/modules/ModulesVMNode$1, checkProperty(Ljava/lang/String;Lorg/eclipse/core/runtime/IStatus;Ljava/util/Map;)Z > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/variable/VariableVMNode$20$1, handleCompleted()V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/model/BreakpointsAnnotationModel$1, run()V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/variable/VariableVMProvider$3, run()V > Context: Everywhere
   start: Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
      Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

--- found anomaly call chain ----, num: 192
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/variable/VariableVMProvider$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/service/DsfServicesTracker, <init>(Lorg/osgi/framework/BundleContext;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AssertionError, <init>(Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Label, setText(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

      Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

--- found anomaly call chain ----, num: 193
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/variable/VariableVMProvider$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/service/DsfServicesTracker, <init>(Lorg/osgi/framework/BundleContext;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AssertionError, <init>(Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/Dialog, shortenText(Ljava/lang/String;Lorg/eclipse/swt/widgets/Control;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, internal_new_GC(Lorg/eclipse/swt/graphics/GCData;)J > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, getSystemFont()Lorg/eclipse/swt/graphics/Font; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SerialPortSettingsBlock$2, dialogFieldChanged(Lorg/eclipse/cdt/debug/internal/ui/dialogfields/DialogField;)V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/AbstractDebugVMAdapter$1, run()V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/internal/ui/disassembly/DisassemblyPart$27, run()V > Context: Everywhere
----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/viewmodel/launch/ContainerVMNode$3, run()V > Context: Everywhere
   start: Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
      Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

--- found anomaly call chain ----, num: 194
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/viewmodel/launch/ContainerVMNode$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/viewmodel/launch/ContainerVMNode$3$1, <init>(Lorg/eclipse/cdt/dsf/gdb/internal/ui/viewmodel/launch/ContainerVMNode$3;Ljava/util/concurrent/Executor;Lorg/eclipse/debug/internal/ui/viewers/model/provisional/IViewerUpdate;Lorg/eclipse/ui/IMemento;Lorg/eclipse/debug/internal/ui/viewers/model/provisional/IElementCompareRequest;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/ui/concurrent/ViewerDataRequestMonitor, <init>(Ljava/util/concurrent/Executor;Lorg/eclipse/debug/internal/ui/viewers/model/provisional/IViewerUpdate;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/DataRequestMonitor, <init>(Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor, <init>(Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/DsfExecutable, <init>()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Thread, getStackTrace()[Ljava/lang/StackTraceElement; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/SecurityManager, checkPermission(Ljava/security/Permission;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/security/AccessController, checkPermission(Ljava/security/Permission;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Label, setText(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

      Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

--- found anomaly call chain ----, num: 195
Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/viewmodel/launch/ContainerVMNode$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/viewmodel/launch/ContainerVMNode$3$1, <init>(Lorg/eclipse/cdt/dsf/gdb/internal/ui/viewmodel/launch/ContainerVMNode$3;Ljava/util/concurrent/Executor;Lorg/eclipse/debug/internal/ui/viewers/model/provisional/IViewerUpdate;Lorg/eclipse/ui/IMemento;Lorg/eclipse/debug/internal/ui/viewers/model/provisional/IElementCompareRequest;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/ui/concurrent/ViewerDataRequestMonitor, <init>(Ljava/util/concurrent/Executor;Lorg/eclipse/debug/internal/ui/viewers/model/provisional/IViewerUpdate;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/DataRequestMonitor, <init>(Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor, <init>(Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/DsfExecutable, <init>()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Thread, getStackTrace()[Ljava/lang/StackTraceElement; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/SecurityManager, checkPermission(Ljava/security/Permission;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/security/AccessController, checkPermission(Ljava/security/Permission;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/Dialog, shortenText(Ljava/lang/String;Lorg/eclipse/swt/widgets/Control;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, internal_new_GC(Lorg/eclipse/swt/graphics/GCData;)J > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, getSystemFont()Lorg/eclipse/swt/graphics/Font; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/register/RegisterGroupVMNode$5, run()V > Context: Everywhere
   start: Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
      Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

--- found anomaly call chain ----, num: 196
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/register/RegisterGroupVMNode$5, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/register/RegisterGroupVMNode$5$1, <init>(Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/register/RegisterGroupVMNode$5;Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;Lorg/eclipse/debug/internal/ui/viewers/model/provisional/IElementCompareRequest;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/DataRequestMonitor, <init>(Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor, <init>(Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/DsfExecutable, <init>()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Thread, getStackTrace()[Ljava/lang/StackTraceElement; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/SecurityManager, checkPermission(Ljava/security/Permission;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/security/AccessController, checkPermission(Ljava/security/Permission;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Label, setText(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, checkWidget()V > Context: Everywhere

      Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

--- found anomaly call chain ----, num: 197
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/register/RegisterGroupVMNode$5, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/register/RegisterGroupVMNode$5$1, <init>(Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/register/RegisterGroupVMNode$5;Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;Lorg/eclipse/debug/internal/ui/viewers/model/provisional/IElementCompareRequest;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/DataRequestMonitor, <init>(Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor, <init>(Ljava/util/concurrent/Executor;Lorg/eclipse/cdt/dsf/concurrent/RequestMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/concurrent/DsfExecutable, <init>()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Thread, getStackTrace()[Ljava/lang/StackTraceElement; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/SecurityManager, checkPermission(Ljava/security/Permission;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/security/AccessController, checkPermission(Ljava/security/Permission;)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, toString()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Item, getNameText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/TreeItem, getText()Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;Z)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Tree, checkData(Lorg/eclipse/swt/widgets/TreeItem;IZ)Z > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(ILorg/eclipse/swt/widgets/Event;Z)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Widget, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/EventTable, sendEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/AbstractTableViewer$1, handleEvent(Lorg/eclipse/swt/widgets/Event;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/viewers/StructuredViewer, updateItem(Lorg/eclipse/swt/widgets/Widget;Ljava/lang/Object;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, run(Lorg/eclipse/core/runtime/ISafeRunnable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable$1, handleException(Lorg/eclipse/core/runtime/ISafeRunnable;Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnable, handleException(Ljava/lang/Throwable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$2, show(Lorg/eclipse/core/runtime/IStatus;Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/Policy$3, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/util/SafeRunnableDialog, <init>(Lorg/eclipse/core/runtime/IStatus;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/resource/JFaceResources, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/Format, format(Ljava/lang/Object;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/text/MessageFormat, subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(I)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringBuffer, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/AbstractStringBuilder, substring(II)Ljava/lang/String; > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/String, <init>([BII)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/StringCoding, decode([BII)[C > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/System, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Runtime, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, exit(I)V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, sequence()V > Context: Everywhere
 -> Node: < Primordial, Ljava/lang/Shutdown, runHooks()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/Worker, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, startJob(Lorg/eclipse/core/internal/jobs/Worker;)Lorg/eclipse/core/internal/jobs/InternalJob; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/core/internal/jobs/WorkerPool, jobQueued()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: synthetic < Primordial, Ljava/lang/Thread, start()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/operation/ModalContext$ModalContextThread, run()V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/cdt/dsf/gdb/internal/ui/launching/SolibSearchPathBlock$5, run(Lorg/eclipse/core/runtime/IProgressMonitor;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/ProgressMonitorDialog$ProgressMonitor, subTask(Ljava/lang/String;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/jface/dialogs/Dialog, shortenText(Ljava/lang/String;Lorg/eclipse/swt/widgets/Control;)Ljava/lang/String; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/graphics/GC, <init>(Lorg/eclipse/swt/graphics/Drawable;I)V > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, internal_new_GC(Lorg/eclipse/swt/graphics/GCData;)J > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, getSystemFont()Lorg/eclipse/swt/graphics/Font; > Context: Everywhere
 -> Node: < Application, Lorg/eclipse/swt/widgets/Display, checkDevice()V > Context: Everywhere

----reach nodes for entry point -----
Node: < Application, Lorg/eclipse/cdt/dsf/debug/ui/viewmodel/variable/VariableVMNode$14, run()V > Context: Everywhere
Total: 198

